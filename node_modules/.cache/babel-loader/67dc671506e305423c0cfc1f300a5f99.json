{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\GitHub\\\\watch\\\\src\\\\components\\\\defiDetail\\\\DefiDetail.js\";\nimport React, { Component, Suspense, useState, useEffect } from \"react\";\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { observer, inject } from 'mobx-react';\nimport ReactGA from \"react-ga\";\nimport useStores from '../../useStores';\nimport { numberWithCommas, capitalize, replaceAll } from '../../util/Util';\nimport '../../App.css';\nimport TopBar from '../topBar/TopBar';\nimport TotalValue from '../totalValue/TotalValue';\nimport MiniCards from '../miniCards/MiniCards';\nimport DefiOverview from '../defiOverview/DefiOverview';\nimport DefiDetailList from '../defiDetailList/DefiDetailList';\nimport MobileDefiBtns from '../mobileDefiBtns/MobileDefiBtns';\nimport Footer from '../footer/Footer';\nconst DefiDetail = observer(() => {\n  const {\n    global\n  } = useStores();\n  const location = useLocation();\n  const history = useHistory();\n  const [responseError, setResponseError] = useState();\n  const [urlPathName, setUrlPathName] = useState();\n  const [defiName, setDefiName] = useState(\"\");\n\n  async function checkValidDefiName() {\n    const res = await fetch(global.defistationApiUrl + \"/defiNames\", {\n      method: 'GET',\n      headers: {\n        Authorization: global.auth\n      }\n    });\n    res.json().then(res => {\n      // console.log(\"res: \", res);\n      for (var i = 0; i < res.length; i++) {\n        // res[i] 에 기호, 공백 제거하고 소문자로 변경하기\n        let tempDefiName = res[i]; // beefy.finance 같은 경우 기호, 공백 제거(url 용도)\n\n        tempDefiName = replaceAll(tempDefiName, \".\", \"\");\n        tempDefiName = replaceAll(tempDefiName, \" \", \"\");\n        tempDefiName = tempDefiName.toLowerCase(); // DB에 해당 pathname 이름이 존재한다.\n\n        if (location.pathname == \"/\" + tempDefiName) {\n          setDefiName(res[i]); // 실제 이름\n\n          setUrlPathName(tempDefiName); // url 용 이름\n\n          break;\n        }\n      }\n    }).catch(err => setResponseError(err));\n  }\n\n  function movePage(path) {\n    history.push(path);\n  }\n\n  useEffect(() => {\n    checkValidDefiName(); // Google Analytics\n\n    if (process.env.NODE_ENV === \"production\") ReactGA.pageview(window.location.pathname + window.location.search);\n    return () => {\n      console.log('cleanup');\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper\",\n    style: defiName != \"\" ? undefined : {\n      display: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TopBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TotalValue, {\n    defiName: defiName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(MobileDefiBtns, {\n    defiName: defiName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(MiniCards, {\n    defiName: defiName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(DefiOverview, {\n    defiName: defiName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(DefiDetailList, {\n    defiName: defiName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  })));\n});\nexport default DefiDetail;","map":{"version":3,"sources":["C:/Users/user/Documents/GitHub/watch/src/components/defiDetail/DefiDetail.js"],"names":["React","Component","Suspense","useState","useEffect","useHistory","useLocation","observer","inject","ReactGA","useStores","numberWithCommas","capitalize","replaceAll","TopBar","TotalValue","MiniCards","DefiOverview","DefiDetailList","MobileDefiBtns","Footer","DefiDetail","global","location","history","responseError","setResponseError","urlPathName","setUrlPathName","defiName","setDefiName","checkValidDefiName","res","fetch","defistationApiUrl","method","headers","Authorization","auth","json","then","i","length","tempDefiName","toLowerCase","pathname","catch","err","movePage","path","push","process","env","NODE_ENV","pageview","window","search","console","log","undefined","display"],"mappings":"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","sourcesContent":["import React, { Component, Suspense, useState, useEffect } from \"react\";\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { observer, inject } from 'mobx-react';\nimport ReactGA from \"react-ga\";\nimport useStores from '../../useStores';\n\nimport { numberWithCommas, capitalize, replaceAll } from '../../util/Util';\n\nimport '../../App.css';\n\nimport TopBar from '../topBar/TopBar';\nimport TotalValue from '../totalValue/TotalValue';\nimport MiniCards from '../miniCards/MiniCards';\nimport DefiOverview from '../defiOverview/DefiOverview';\nimport DefiDetailList from '../defiDetailList/DefiDetailList';\nimport MobileDefiBtns from '../mobileDefiBtns/MobileDefiBtns';\nimport Footer from '../footer/Footer';\n\nconst DefiDetail = observer(() => {\n    const { global } = useStores();\n\n    const location = useLocation();\n    const history = useHistory();\n\n    const [responseError, setResponseError] = useState();\n\n    const [urlPathName, setUrlPathName] = useState();\n    const [defiName, setDefiName] = useState(\"\");\n\n    async function checkValidDefiName() {\n        const res = await fetch(global.defistationApiUrl + \"/defiNames\", {\n            method: 'GET',\n            headers: {\n                Authorization: global.auth\n            }\n        });\n        res\n            .json()\n            .then(res => {\n                // console.log(\"res: \", res);\n\n                for (var i = 0; i < res.length; i++) {\n                    // res[i] 에 기호, 공백 제거하고 소문자로 변경하기\n                    let tempDefiName = res[i];\n                    \n                    // beefy.finance 같은 경우 기호, 공백 제거(url 용도)\n                    tempDefiName = replaceAll(tempDefiName, \".\", \"\");\n                    tempDefiName = replaceAll(tempDefiName, \" \", \"\");\n                    tempDefiName = tempDefiName.toLowerCase();\n\n                    // DB에 해당 pathname 이름이 존재한다.\n                    if (location.pathname == \"/\" + tempDefiName) {\n                        setDefiName(res[i]);    // 실제 이름\n                        setUrlPathName(tempDefiName);   // url 용 이름\n                        break;\n                    }\n                }\n            })\n            .catch(err => setResponseError(err));\n    }\n\n    function movePage(path) {\n        history.push(path);\n    }\n\n    useEffect(() => {\n        checkValidDefiName();\n\n        // Google Analytics\n        if (process.env.NODE_ENV === \"production\") ReactGA.pageview(window.location.pathname + window.location.search);\n\n        return () => {\n            console.log('cleanup');\n        };\n    }, [])\n\n    return (\n        <>\n            <div className=\"wrapper\" style={defiName != \"\" ? undefined : {display: \"none\"}}>\n                <TopBar />\n                <TotalValue defiName={defiName} />\n                <MobileDefiBtns defiName={defiName} />\n                <MiniCards defiName={defiName} />\n                <DefiOverview defiName={defiName} />\n                <DefiDetailList defiName={defiName} />\n                <Footer />\n            </div>\n        </>\n    );\n})\n\nexport default DefiDetail;\n"]},"metadata":{},"sourceType":"module"}