{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\GitHub\\\\watch\\\\src\\\\components\\\\totalValue\\\\TotalValue.js\";\nimport React, { Component, Fragment, useState, useEffect } from 'react';\nimport { observer } from 'mobx-react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport _ from \"lodash\";\nimport useStores from '../../useStores';\nimport { getSponsors } from '../../sponsor/Sponsor';\nimport { numberWithCommas, capitalize, replaceAll, getCurrencyUnit, getCurrencyUnitFullName, getCurrencyDigit, getOfficialDefiName } from '../../util/Util';\nimport TvlLink from './tvlLink/TvlLink';\nimport Chart from \"react-google-charts\";\nimport defistationApplicationList from \"../../defistationApplicationList.json\";\nimport loading from \"../../assets/images/loading.gif\";\nimport defaultIcon from \"../../assets/images/defiLogo/project-none@2x.png\";\nimport bscLogo from \"../../assets/images/bsc_logo@2x.png\";\nimport bscScanLogo from \"../../assets/images/bscscan_logo@2x.png\";\nimport exchangeLogo from \"../../assets/images/exchange_logo@2x.png\";\nimport cosmostationLogo from \"../../assets/images/cosmostation_logo@2x.png\"; // 프로젝트 아이콘\n\nimport alphafinance from \"../../assets/images/defiLogo/alphafinance@2x.png\";\nimport bakeryswap from \"../../assets/images/defiLogo/bakeryswap@2x.png\";\nimport beefyfinance from \"../../assets/images/defiLogo/beefyfinance@2x.png\";\nimport bscswap from \"../../assets/images/defiLogo/bscswap@2x.png\";\nimport burgerswap from \"../../assets/images/defiLogo/burgerswap@2x.png\";\nimport creamfinance from \"../../assets/images/defiLogo/creamfinance@2x.png\";\nimport fortube from \"../../assets/images/defiLogo/fortube@2x.png\";\nimport fryworld from \"../../assets/images/defiLogo/fryworld@2x.png\";\nimport pancake from \"../../assets/images/defiLogo/pancakeswap@2x.png\";\nimport peachswap from \"../../assets/images/defiLogo/peachswap@2x.png\";\nimport spartanprotocol from \"../../assets/images/defiLogo/spartanprotocol@2x.png\";\nimport stakecow from \"../../assets/images/defiLogo/stakecow@2x.png\";\nimport streamity from \"../../assets/images/defiLogo/streamity@2x.png\";\nimport stormswap from \"../../assets/images/defiLogo/stormswap@2x.png\";\nimport narwhalswap from \"../../assets/images/defiLogo/narwhalswap@2x.png\";\nimport bnexchange from \"../../assets/images/defiLogo/bnexchange@2x.png\";\nimport softdrinkswap from \"../../assets/images/defiLogo/softdrinkswap@2x.png\";\nimport nyanswap from \"../../assets/images/defiLogo/nyanswap@2x.png\";\nimport sevenupfinance from \"../../assets/images/defiLogo/7upfinance@2x.png\";\nimport bfisfinance from \"../../assets/images/defiLogo/bfisfinance@2x.png\";\nimport bstablefinance from \"../../assets/images/defiLogo/bstablefinance@2x.png\";\nimport dego from \"../../assets/images/defiLogo/dego@2x.png\";\nimport equatorfinance from \"../../assets/images/defiLogo/equatorfinance@2x.png\";\nimport stablexswap from \"../../assets/images/defiLogo/stablexswap@2x.png\";\nimport qian from \"../../assets/images/defiLogo/qian@2x.png\";\nimport pancakebunny from \"../../assets/images/coins/pancakebunny.png\";\nimport julswap from \"../../assets/images/defiLogo/julswap@2x.png\";\nimport justliquidity from \"../../assets/images/defiLogo/justliquidity@2x.png\";\nimport anyswap from \"../../assets/images/defiLogo/anyswap@2x.png\";\nimport cokefinance from \"../../assets/images/defiLogo/cokefinance@2x.png\";\nimport renvm from \"../../assets/images/defiLogo/renvm@2x.png\";\nimport unifiprotocol from \"../../assets/images/defiLogo/unifiprotocol@2x.png\";\nimport venus from \"../../assets/images/defiLogo/venus@2x.png\";\nimport thugs from \"../../assets/images/defiLogo/thugs@2x.png\";\nimport cberry from \"../../assets/images/defiLogo/cberry@2x.png\";\nimport jetfuel from \"../../assets/images/defiLogo/jetfuel@2x.png\";\nimport acryptos from \"../../assets/images/defiLogo/acryptos@2x.png\";\nimport autofarm from \"../../assets/images/defiLogo/autofarm@2x.png\";\nimport basddollar from \"../../assets/images/defiLogo/basddollar@2x.png\";\nimport bdollar from \"../../assets/images/defiLogo/bdollar@2x.png\";\nimport bscfarm from \"../../assets/images/defiLogo/bscfarm@2x.png\";\nimport MidasDollar from \"../../assets/images/defiLogo/MidasDollar@2x.png\";\nimport LinearFinance from \"../../assets/images/defiLogo/LinearFinance@2x.png\";\nimport KEEP3RBSC from \"../../assets/images/defiLogo/KEEP3RBSC@2x.png\";\nimport kebab from \"../../assets/images/defiLogo/kebab@2x.png\";\nimport goosefinance from \"../../assets/images/defiLogo/goosefinance@2x.png\";\nimport CrowFinance from \"../../assets/images/defiLogo/CrowFinance@2x.png\";\nimport CheeseSwap from \"../../assets/images/defiLogo/CheeseSwap@2x.png\";\nimport bscex from \"../../assets/images/defiLogo/bscex@2x.png\";\nimport derifinance from \"../../assets/images/defiLogo/derifinance@2x.png\";\nimport beltfinance from \"../../assets/images/defiLogo/belt@2x.png\";\nimport bifi from \"../../assets/images/defiLogo/bififinance@2x.png\";\nimport blackholeswap from \"../../assets/images/defiLogo/blackholeswap@2x.png\";\nimport multiplier from \"../../assets/images/defiLogo/multiplier@2x.png\";\nimport pikafinance from \"../../assets/images/defiLogo/pikafinance@2x.png\";\nimport bscrunner from \"../../assets/images/defiLogo/bscrunner@2x.png\";\nimport ellipsisfinance from \"../../assets/images/defiLogo/ellipsisfinance@2x.png\";\nimport demex from \"../../assets/images/defiLogo/demex@2x.png\";\nimport dodo from \"../../assets/images/defiLogo/dodo@2x.png\";\nimport helmet from \"../../assets/images/defiLogo/helmet@2x.png\";\nimport ariesfinancial from \"../../assets/images/defiLogo/ariesfinancial@2x.png\";\nimport alphahomora from \"../../assets/images/defiLogo/alphahomora@2x.png\";\nimport cobaltfinance from \"../../assets/images/defiLogo/cobaltfinance@2x.png\";\nimport swampfinance from \"../../assets/images/defiLogo/swampfinance@2x.png\";\nimport nominex from \"../../assets/images/defiLogo/Nominex@2x.png\";\nimport waultfinance from \"../../assets/images/defiLogo/waultfinance@2x.png\";\nimport wepiggy from \"../../assets/images/defiLogo/wepiggy@2x.png\";\nimport rabbitfinance from \"../../assets/images/defiLogo/rabbitfinance@2x.png\";\nimport biswap from \"../../assets/images/defiLogo/biswap@2x.png\";\nimport insuraceprotocol from \"../../assets/images/defiLogo/insuraceprotocol@2x.png\";\nimport ten from \"../../assets/images/defiLogo/ten@2x.png\";\nimport mdex from \"../../assets/images/defiLogo/mdex@2x.png\";\nimport pumpy from \"../../assets/images/defiLogo/pumpy@2x.png\";\nimport dforce from \"../../assets/images/defiLogo/dforce@2x.png\"; // Defi Link 아이콘\n\nimport defiOfficialSiteIcon from \"../../assets/images/defiLink/officialsite.svg\";\nimport defiGithubIcon from \"../../assets/images/defiLink/github.svg\";\nimport defiDocsIcon from \"../../assets/images/defiLink/docs.svg\";\nimport defiTwitterIcon from \"../../assets/images/defiLink/twitter.svg\";\nimport defiTelegramIcon from \"../../assets/images/defiLink/telegram.svg\";\nimport defiBlogIcon from \"../../assets/images/defiLink/blog.svg\";\nconst TotalValue = observer(props => {\n  const {\n    global\n  } = useStores();\n  const history = useHistory();\n  const location = useLocation();\n  const [responseError, setResponseError] = useState();\n  const [response, setResponse] = useState({}); // all, 1year, 90days\n\n  const [chartPeriod, setChartPeriod] = useState(\"180\"); // 7, 30, 90, 180\n\n  const [chartLegendLabel, setChartLegendLabel] = useState();\n  const [chartData, setChartData] = useState(['x', 'TVL(USD)']);\n  const [totalValueLockedUsd, setTotalValueLockedUsd] = useState(0);\n  const [minTvl, setMinTvl] = useState(0);\n  const [linkTag, setLinkTag] = useState(\"\");\n  const [defiIcon, setDefiIcon] = useState(); // 차트 오른쪽 Unit: TXs or USD\n\n  const [dualYUnitText, setDualYUnitText] = useState(\"TXs\");\n  const [projectBtnLink, setProjectBtnLink] = useState();\n  const [currencyFullName, setCurrencyFullName] = useState(\"\");\n  const [txsUnitForDualY, setTxsUnitForDualY] = useState(\"\"); // PC에서는 Total Value Locked, mobile에서는 TVL\n  // const [tvlChartCardTitleValue, setTvlChartCardTitleValue] = useState(\"Total Value Locked\");\n  // const [tvlChartCardTitleValue, setTvlChartCardTitleValue] = useState(\"TVL & TXs in BSC\");\n\n  const [tvlChartCardTitleValue, setTvlChartCardTitleValue] = useState(\"BSC\"); // 1) 1034px 이상\n\n  const [viewWidth, setViewWidth] = useState(\"750px\"); // const [viewWidth, setViewWidth] = useState(\"80vw\");\n\n  const [chartWidth, setChartWidth] = useState(\"89%\"); // https://github.com/rakannimer/react-google-charts/issues/209\n\n  const [fakeControls, setFakeControls] = useState([]); // 2) 1024px: 270px, 88%\n  // 3) 768px: 270px, 88%\n  // 4) 414px ~ 767px: 374px, 88%\n  // 5) 360px ~ 413px: 290px, 88%\n  // 6) 1px ~ 359px: 270px, 88%\n  // const defistationApiUrl = \"https://api.defistation.io\";\n\n  const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n  function getMonthAndDay(date) {\n    let monthName = monthNames[date.getMonth()];\n    let day = date.getDate();\n    return monthName + \" \" + day;\n  } // const [urlFlag1, setUrlFlag1] = useState(false);\n\n\n  const [urlFlagDetail, setUrlFlagDetail] = useState(\"\");\n\n  async function getChart(defiName) {\n    // if (defiName == \"DeFi\") {\n    //     if (urlFlag1) return;\n    // }\n    // setUrlFlag1(true);\n    // console.log(\"getChart 함수 시작\");\n    let urlStr = \"\";\n\n    if (defiName == \"DeFi\") {\n      urlStr = \"all\";\n      setChartData(['x', 'TVL(USD)', 'Transactions']);\n    } else {\n      urlStr = defiName;\n      setChartData(['x', 'TVL(USD)', 'Token Price(USD)']);\n    } // console.log(\"urlStr: \", urlStr);\n\n\n    if (urlStr == \"\") {\n      global.changeTotalValueLockedUsd(\"$ 0\");\n      global.changeTvl1DayPercent(0);\n      return;\n    }\n\n    let chartFullUrl = \"/chart/\" + urlStr + \"?days=\" + chartPeriod; // detail\n\n    if (urlFlagDetail == chartFullUrl) return;\n    setUrlFlagDetail(chartFullUrl); // 7d, 30d, 90d 모두 days 90으로 가져옴\n\n    let chartFullUrl2; // if (chartPeriod == 180) {\n    //     chartFullUrl2 = \"/chart/\" + urlStr + \"?days=\" + \"180\";\n    // } else {\n    //     chartFullUrl2 = \"/chart/\" + urlStr + \"?days=\" + \"90\";\n    // }\n\n    chartFullUrl2 = \"/chart/\" + urlStr + \"?days=\" + \"180\";\n    const res = await fetch(global.defistationApiUrl + chartFullUrl2, {\n      method: 'GET',\n      headers: {\n        Authorization: global.auth\n      }\n    });\n    res.json().then(res => {\n      // console.log(\"res: \", res);\n      // data={[\n      //     ['x', 'TVL(USD)'],\n      //     [\"Jan\", 1400],\n      //     [\"Feb\", 1300],\n      //     [\"Mar\", 3510],\n      //     [\"Apr\", 1070],\n      //     [\"May\", 2480],\n      //     [\"Jun\", 5140],\n      //     [\"Jul\", 5520],\n      //     [\"Aug\", 8830],\n      // ]}\n      // let tempChartData = [['x', 'TVL(USD)']];\n      // ------------ 메인 페이지 TVL ------------\n      let tempChartData = [];\n      let initProjectTvlIndex = -1;\n\n      if (res.result == null) {\n        setMinTvl(0);\n        global.changeTotalValueLockedUsd(\"$ 0\");\n        return;\n      } // res.result 를 배열로 바꾸기 \n\n\n      let resultObj = res.result;\n      var resultArr = Object.keys(resultObj).map(key => [Number(key), resultObj[key]]); // console.log(\"[0604 TEST] resultArr: \", resultArr);\n      // chartPeriod 가 7, 30, 90 에 따라서 배열에 해당 최신 개수만 남겨두기\n      // if (chartPeriod == 7 || chartPeriod == 30) {\n      // resultArr.splice(0, resultArr.length - chartPeriod);\n      // resultArr.splice(resultArr.length - chartPeriod, resultArr.length - 1);\n      // }\n\n      let digitForTx;\n      let currencyUnitForTx;\n      let tempCurrencyFullNameForTx;\n      let sumTokenPrice = 0; // ------------ 메인 페이지 TXs ------------\n\n      if (defiName == \"DeFi\") {\n        // setChartLegendLabel(<div className=\"tvlChartLegendBox\"><div className=\"circleYellow\"></div><div>TVL</div> <div className=\"circleGray\">⦁</div><div>Transactions</div></div>);\n        setChartLegendLabel( /*#__PURE__*/React.createElement(\"ul\", {\n          className: \"tvlChartLegendBoxUl\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"circleYellow\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 53\n          }\n        })), /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"tvlChartLegendLabel\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 53\n          }\n        }, \"TVL\")), /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"circleGray\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 53\n          }\n        })), /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 49\n          }\n        }, \"Transactions\")));\n        let dailyTxObj = res.dailyTx;\n        var dailyTxArr = Object.keys(dailyTxObj).map(key => [Number(key), dailyTxObj[key]]); // console.log(\"dailyTxArr: \", dailyTxArr);\n        // 최신 TXs 값 구하기. 최신 TXs 변화 % 계산하기\n\n        let latestTxVal = 0;\n        let latestTxChange = 0;\n\n        for (var j = 0; j < dailyTxArr.length; j++) {\n          if (j > 0) {\n            if (dailyTxArr[j][1] > 0) latestTxVal = dailyTxArr[j][1];\n            if (dailyTxArr[j - 1][1] > 0 && dailyTxArr[j][1] > 0) latestTxChange = (dailyTxArr[j][1] - dailyTxArr[j - 1][1]) / dailyTxArr[j][1] * 100;\n          }\n        } // console.log(\"latestTxVal: \", latestTxVal);\n        // console.log(\"latestTxChange: \", latestTxChange.toFixed(2));\n\n\n        global.changeTransactions24h(numberWithCommas(latestTxVal));\n        global.changeTransactions24hPercent(latestTxChange.toFixed(2)); // DualY 단위 계산\n        // TXs \n        // dailyTxArr 에서 가장 마지막 값을 기준으로 단위 만들기\n        // Billion! dailyTxArr[i][1]\n        // let digitForTx;\n        // let currencyUnitForTx;\n        // let tempCurrencyFullNameForTx;\n        // console.log(\"[0428] 테스트 111111: \", latestTxVal);\n        // 메인 페이지\n\n        digitForTx = getCurrencyDigit(latestTxVal);\n        currencyUnitForTx = getCurrencyUnit(latestTxVal);\n        tempCurrencyFullNameForTx = getCurrencyUnitFullName(latestTxVal);\n        setTxsUnitForDualY(tempCurrencyFullNameForTx); // console.log(\"[0428] digitForTx: \", digitForTx);\n        // console.log(\"[0428] currencyUnitForTx: \", currencyUnitForTx);\n        // console.log(\"[0428] tempCurrencyFullNameForTx: \", tempCurrencyFullNameForTx);\n      } else {\n        // 서브 페이지\n        let index = findDefiIndexNum(defiName);\n        let tokenSymbolName = defistationApplicationList[index][\"Ticker\"].toUpperCase();\n        setTvlChartCardTitleValue(\"TVL & \" + \"Token\" + \" Price\"); // token price\n\n        let priceObj = res.price;\n        var priceArr = Object.keys(priceObj).map(key => [Number(key), priceObj[key]]);\n\n        for (var i = 0; i < priceArr.length; i++) {\n          sumTokenPrice += priceArr[i][1];\n        }\n\n        if (priceArr.length > 0 && sumTokenPrice > 0) {\n          // setChartLegendLabel(<><span className=\"circleYellow\">⦁</span> TVL <span className=\"circleGreen\">⦁</span> {tokenSymbolName} Price</>);\n          setChartLegendLabel( /*#__PURE__*/React.createElement(\"ul\", {\n            className: \"tvlChartLegendBoxUl\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 45\n            }\n          }, /*#__PURE__*/React.createElement(\"li\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 49\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"circleYellow\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 53\n            }\n          })), /*#__PURE__*/React.createElement(\"li\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 49\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"tvlChartLegendLabel\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 53\n            }\n          }, \"TVL\")), /*#__PURE__*/React.createElement(\"li\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 49\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"circleGreen\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 53\n            }\n          })), /*#__PURE__*/React.createElement(\"li\", {\n            className: \"noWrap\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 49\n            }\n          }, tokenSymbolName, \" Price\")));\n        } else {\n          // defi 프로젝트에 토큰 가격이 없는 경우\n          // setChartLegendLabel(<><span className=\"circleYellow\">⦁</span> TVL</>);\n          setChartLegendLabel( /*#__PURE__*/React.createElement(\"ul\", {\n            className: \"tvlChartLegendBoxUl\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 45\n            }\n          }, /*#__PURE__*/React.createElement(\"li\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 49\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"circleYellow\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 53\n            }\n          })), /*#__PURE__*/React.createElement(\"li\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 49\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"tvlChartLegendLabel\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 53\n            }\n          }, \"TVL\"))));\n        }\n      } // console.log(\"dailyTxArr: \", dailyTxArr);\n\n\n      let initTimestamp = 0;\n      let tempMinTvl; // K, M, B 기준은 최초 0번째 데이터(단, 0번째가 0이 아닐때)\n      // let digit = getCurrencyDigit(resultArr[0][1]);\n      // let currencyUnit = getCurrencyUnit(resultArr[0][1]);\n      // let tempCurrencyFullName = getCurrencyUnitFullName(resultArr[0][1]);\n\n      let digit;\n      let currencyUnit;\n      let tempCurrencyFullName; // if (resultArr[0][1] > 0) {\n      //     digit = getCurrencyDigit(resultArr[0][1]);\n      //     currencyUnit = getCurrencyUnit(resultArr[0][1]);\n      //     tempCurrencyFullName = getCurrencyUnitFullName(resultArr[0][1]);\n      // } else {\n      //     digit = getCurrencyDigit(resultArr[resultArr.length - 1][1]);\n      //     currencyUnit = getCurrencyUnit(resultArr[resultArr.length - 1][1]);\n      //     tempCurrencyFullName = getCurrencyUnitFullName(resultArr[resultArr.length - 1][1]);\n      // }\n      // Billion!\n\n      digit = getCurrencyDigit(resultArr[resultArr.length - 1][1]);\n      currencyUnit = getCurrencyUnit(resultArr[resultArr.length - 1][1]);\n      tempCurrencyFullName = getCurrencyUnitFullName(resultArr[resultArr.length - 1][1]);\n      setCurrencyFullName(tempCurrencyFullName); // 차트에 TVL B, M, K 단위 기입\n\n      if (defiName == \"DeFi\") {\n        setChartData(['x', 'TVL(' + currencyFullName + ')', 'Transactions']);\n      } else {\n        setChartData(['x', 'TVL(' + currencyFullName + ')', 'Token Price(USD)']);\n      } // console.log(\"resultArr.length: \", resultArr.length);\n\n\n      let subChartStartingCorrectionFlag = false;\n      let prevCurrencyNum = 0;\n      let nextCurrencyNum = 0;\n      let prevTokenPrice = 0;\n      let nextTokenPrice = 0;\n\n      for (var i = 0; i < resultArr.length; i++) {\n        if (i == 0) {\n          initTimestamp = resultArr[i][0];\n        } // console.log(\"resultArr[i][0]: \", resultArr[i][0]);\n        // console.log(\"resultArr[i][1]: \", resultArr[i][1]);\n        // let digit = getCurrencyDigit(resultArr[i][1]);\n        // console.log(\"digit: \", digit);\n\n\n        let currencyNum = (resultArr[i][1] / digit).toFixed(3) * 1; // console.log(\"currencyNum: \", currencyNum);\n\n        if (i == 0) {\n          // tempMinTvl = currencyNum;\n          if (currencyNum > 0) {\n            tempMinTvl = currencyNum;\n          }\n        } else {\n          // 가장 작은 값 찾기(vAxis 최솟값)\n          if (tempMinTvl > currencyNum) {\n            // tempMinTvl = currencyNum;\n            if (currencyNum > 0) {\n              tempMinTvl = currencyNum;\n            }\n          }\n        } // console.log(\"tempMinTvl: \", tempMinTvl);\n        // 이전 연속 2개의 값이 0이 아니라면 직전 값으로 보정한다. (미싱 데이터 보정)\n\n\n        if (currencyNum == 0) {\n          // 이전 2개의 값이 0인가?\n          if (i > 2) {\n            let prevCurrentNum1 = (resultArr[i - 1][1] / digit).toFixed(3) * 1;\n            let prevCurrentNum2 = (resultArr[i - 2][1] / digit).toFixed(3) * 1; // if (prevCurrentNum1 > 0 && prevCurrentNum2 > 0) {\n            //     currencyNum = prevCurrentNum1;\n            // }\n\n            if (prevCurrentNum1 > 0) {\n              currencyNum = prevCurrentNum1;\n            } else if (prevCurrentNum2 > 0) {\n              currencyNum = prevCurrentNum2;\n            }\n          }\n        } // 신규 프로젝트인 경우 7d, 30d 일 때 앞에 tvl 값이 0이 연속으로 오는 경우 해당 배열 요소 제거\n        // tempChartData[0][1] 이 0인가?\n        // 연속으로 0인가? -> 차트 추가 안함\n\n\n        if (i == 0) {\n          if (currencyNum == 0) {\n            initProjectTvlIndex = 0;\n          }\n        }\n\n        if (initProjectTvlIndex > -1) {\n          if (currencyNum == 0) {\n            initProjectTvlIndex = i;\n          } else {\n            initProjectTvlIndex = -1;\n          }\n        } // dailyTxArr\n\n\n        if (initProjectTvlIndex == -1) {\n          if (defiName == \"DeFi\") {\n            // 메인 페이지\n            let tempDailyTx = dailyTxArr[i][1] / digitForTx;\n\n            if (tempDailyTx == 0) {\n              tempDailyTx = null;\n            } // tempChartData.push([getMonthAndDay(new Date(resultArr[i][0] * 1000)), currencyNum, tempDailyTx]);\n\n\n            if (i == resultArr.length - 1) {\n              // 마지막에는 최신 TX 한번 더 넣기\n              tempChartData.push([getMonthAndDay(new Date(resultArr[i][0] * 1000)), currencyNum, dailyTxArr[i - 1][1] / digitForTx]);\n            } else {\n              tempChartData.push([getMonthAndDay(new Date(resultArr[i][0] * 1000)), currencyNum, tempDailyTx]);\n            }\n          } else {\n            // console.log(\"[0416] 테스트3333333\");\n            // 서브 페이지\n            let tempPrice = null; // let prevPrice = null;\n            // console.log(\"[0416] priceArr: \", priceArr);\n\n            if (priceArr.length > 0 && sumTokenPrice > 0) {\n              tempPrice = priceArr[i][1]; // tempChartData.push([getMonthAndDay(new Date(resultArr[i][0] * 1000)), currencyNum, tempPrice]);\n              // 중간에 tvl, token price 에 0이 들어있는 경우 보정\n              // ((이전 값) + (0이 아닌 다음 값)) / 2\n\n              if (defiName == \"pancake\") {\n                console.log(\"pancake 예외처리\"); // --------------- tvl 보정 평균값 계산 START ---------------\n\n                let calCurrencyNum = 0;\n\n                if (currencyNum == 0) {\n                  // 다음 0 이 아닌값 임시 조회\n                  for (var j = i; j < resultArr.length; j++) {\n                    nextCurrencyNum = (resultArr[j][1] / digit).toFixed(3) * 1;\n                    if (nextCurrencyNum > 0) break;\n                  }\n\n                  calCurrencyNum = (prevCurrencyNum + nextCurrencyNum) / 2;\n                } else {\n                  calCurrencyNum = currencyNum;\n                } // --------------- tvl 보정 평균값 계산 END ---------------\n                // --------------- token price 보정 평균값 계산 START ---------------\n\n\n                let calTokenPrice = 0;\n\n                if (tempPrice == 0) {\n                  // 다음 0 이 아닌값 임시 조회\n                  for (var j = i; j < resultArr.length; j++) {\n                    nextTokenPrice = priceArr[j][1];\n                    if (nextTokenPrice > 0) break;\n                  }\n\n                  calTokenPrice = (prevTokenPrice + nextTokenPrice) / 2;\n                } else {\n                  calTokenPrice = tempPrice;\n                } // --------------- token price 보정 평균값 계산 END ---------------\n\n\n                tempChartData.push([getMonthAndDay(new Date(resultArr[i][0] * 1000)), calCurrencyNum, calTokenPrice]);\n                if (currencyNum > 0) prevCurrencyNum = currencyNum; // 차트 보정용\n\n                if (tempPrice > 0) prevTokenPrice = tempPrice; // 차트 보정용\n              } else {\n                if (currencyNum > 0 && tempPrice > 0 || subChartStartingCorrectionFlag) {\n                  // --------------- tvl 보정 평균값 계산 START ---------------\n                  let calCurrencyNum = 0;\n\n                  if (currencyNum == 0) {\n                    // 다음 0 이 아닌값 임시 조회\n                    for (var j = i; j < resultArr.length; j++) {\n                      nextCurrencyNum = (resultArr[j][1] / digit).toFixed(3) * 1;\n                      if (nextCurrencyNum > 0) break;\n                    }\n\n                    calCurrencyNum = (prevCurrencyNum + nextCurrencyNum) / 2;\n                  } else {\n                    calCurrencyNum = currencyNum;\n                  } // --------------- tvl 보정 평균값 계산 END ---------------\n                  // --------------- token price 보정 평균값 계산 START ---------------\n\n\n                  let calTokenPrice = 0;\n\n                  if (tempPrice == 0) {\n                    // 다음 0 이 아닌값 임시 조회\n                    for (var j = i; j < resultArr.length; j++) {\n                      nextTokenPrice = priceArr[j][1];\n                      if (nextTokenPrice > 0) break;\n                    }\n\n                    calTokenPrice = (prevTokenPrice + nextTokenPrice) / 2;\n                  } else {\n                    calTokenPrice = tempPrice;\n                  } // --------------- token price 보정 평균값 계산 END ---------------\n\n\n                  tempChartData.push([getMonthAndDay(new Date(resultArr[i][0] * 1000)), calCurrencyNum, calTokenPrice]);\n                  if (currencyNum > 0) prevCurrencyNum = currencyNum; // 차트 보정용\n\n                  if (tempPrice > 0) prevTokenPrice = tempPrice; // 차트 보정용\n\n                  subChartStartingCorrectionFlag = true;\n                }\n              }\n            } else {\n              tempChartData.push([getMonthAndDay(new Date(resultArr[i][0] * 1000)), currencyNum]);\n            } // <span className=\"circleGray\">⦁</span> TXs in BSC\n            // setChartLegendLabel(<><span className=\"circleYellow\">⦁</span> TVL <span className=\"circleGray\">⦁</span> TXs in BSC</>);\n\n          }\n        } else {\n          if (defiName == \"DeFi\") {\n            // 메인 페이지\n            tempChartData.push([getMonthAndDay(new Date(resultArr[i][0] * 1000)), null, null]);\n          } else {// 서브 페이지\n            // tempChartData.push([getMonthAndDay(new Date(resultArr[i][0] * 1000)), null]);\n          }\n        }\n\n        if (i == resultArr.length - 1) {\n          setTotalValueLockedUsd(currencyNum + \" \" + currencyUnit); // global.changeTotalValueLockedUsd(\"$ \" + currencyNum + \" \" + currencyUnit);\n\n          global.changeTotalValueLockedUsd(\"$ \" + numberWithCommas(resultArr[i][1]));\n        }\n      } // 차트: 7d, 30d\n\n\n      if (tempChartData.length > chartPeriod) {\n        let remainDataLength = tempChartData.length - chartPeriod;\n\n        for (var i = 0; i < remainDataLength; i++) {\n          tempChartData.shift(); // 맨 앞 원소 제거\n        }\n      }\n\n      tempMinTvl = Math.floor(tempMinTvl * 0.9); // 차트 최솟값 설정(차트 모양 예쁘게 하기 위함)\n\n      setMinTvl(tempMinTvl); // 차트 데이터 적용\n\n      if (defiName == \"DeFi\") {\n        // 메인 페이지\n        // tempChartData.unshift(['x', 'TVL(USD)', 'Transactions']);\n        tempChartData.unshift(['x', 'TVL(' + tempCurrencyFullName + ')', 'Transactions(' + tempCurrencyFullNameForTx + ')']);\n      } else {\n        // 서브 페이지\n        if (priceArr.length > 0 && sumTokenPrice > 0) {\n          tempChartData.unshift(['x', 'TVL(' + tempCurrencyFullName + ')', 'Token Price(USD)']);\n        } else {\n          tempChartData.unshift(['x', 'TVL(' + tempCurrencyFullName + ')']);\n        }\n      }\n\n      setChartData(tempChartData); // tempChartData\n      // tvl과 token price 한 쌍의 데이터에서 둘중 하나가 0인 경우 해당 쌍을 제거\n      // 서브페이지의 tempChartData[0]: \"x\", \"TVL(Billion)\", \"Token Price(USD)\"\n\n      console.log(\"[0708] tempChartData: \", tempChartData); // TVL 1 DAY(%)\n      // resultArr 가 2개 이상 요소를 가지고 있어야함. 그리고 가장 마지막과 그 이전의 % 차이를 계산하면 됨\n\n      if (resultArr.length >= 2) {\n        let latestTvl = resultArr[resultArr.length - 1][1];\n        let pastTvl = resultArr[resultArr.length - 2][1]; // console.log(\"latestTvl: \", latestTvl);\n        // console.log(\"pastTvl: \", pastTvl);\n        // console.log(\"((1 - pastTvl / latestTvl) * 100).toFixed(2) * 1: \", ((1 - pastTvl / latestTvl) * 100).toFixed(2) * 1);\n\n        let resultTvl1DayPercent = ((1 - pastTvl / latestTvl) * 100).toFixed(2) * 1;\n\n        if (!isNaN(resultTvl1DayPercent)) {\n          // 숫자인 경우에만\n          global.changeTvl1DayPercent(resultTvl1DayPercent);\n        } else {\n          global.changeTvl1DayPercent(0);\n        } // 숫자가 이상한 경우 (2020.12.7 09:00 PM)\n\n\n        if (resultTvl1DayPercent > 1000) {\n          global.changeTvl1DayPercent(0);\n        }\n      } else {\n        // 계산할 값이 없으면 0\n        global.changeTvl1DayPercent(0);\n      } // 홈 하단 1 Day Change 계산\n\n\n      console.log(\"res.details: \", res.details); // undefined\n\n      let resultDetailsObj = res.details;\n      global.changeChartDataDetails(resultDetailsObj);\n    }).catch(err => setResponseError(err));\n  }\n\n  function movePage(path) {\n    history.push(path);\n  }\n\n  function openWindow(path) {\n    window.open(path);\n  }\n\n  function findDefiIndexNum(defiName) {\n    // 예외처리\n    if (defiName == \"pancake\") {\n      defiName = \"PancakeSwap\";\n    } else if (defiName == \"Stakecow\") {\n      defiName = \"Milk Protocol\";\n    }\n\n    let index = 0;\n\n    for (var i = 0; i < defistationApplicationList.length; i++) {\n      if (defistationApplicationList[i][\"Official Project Name\"] == defiName) {\n        index = i;\n        break;\n      }\n    }\n\n    return index;\n  }\n\n  function findLogoUrl(defiName) {\n    // defistationApplicationList 에서 Official Project Name 이 defiName와 일치하는 것 찾기\n    // 예외처리\n    if (defiName == \"pancake\") {\n      defiName = \"PancakeSwap\";\n    } else if (defiName == \"Stakecow\") {\n      defiName = \"Milk Protocol\";\n    }\n\n    let logoUrl = \"\";\n\n    for (var i = 0; i < defistationApplicationList.length; i++) {\n      if (defistationApplicationList[i][\"Official Project Name\"] == defiName) {\n        logoUrl = defistationApplicationList[i][\"Project Logo URL (68px*68px png ONLY. Given link should directly DISPLAY Logo image without any BACKGROUND. Google drive link is NOT accepted.)\"];\n        break;\n      }\n    }\n\n    return logoUrl;\n  }\n\n  function selectOfficialLink(defiName) {\n    switch (defiName) {\n      // case \"pancake\":\n      //     setDefiIcon(pancake);\n      //     break;\n      case \"Peach Swap\":\n        setDefiIcon(peachswap);\n        break;\n\n      case \"Streamity\":\n        setDefiIcon(streamity);\n        break;\n\n      case \"bscSwap\":\n        setDefiIcon(bscswap);\n        break;\n\n      case \"Spartan Protocol\":\n        setDefiIcon(spartanprotocol);\n        break;\n\n      case \"Burger Swap\":\n        setDefiIcon(burgerswap);\n        break;\n\n      case \"Stakecow\":\n        setDefiIcon(stakecow);\n        break;\n\n      case \"Alpha Finance\":\n        setDefiIcon(alphafinance);\n        break;\n\n      case \"Cream Finance\":\n        setDefiIcon(creamfinance);\n        break;\n\n      case \"Bakery Swap\":\n        setDefiIcon(bakeryswap);\n        break;\n\n      case \"ForTube\":\n        setDefiIcon(fortube);\n        break;\n\n      case \"FryWorld\":\n        setDefiIcon(fryworld);\n        break;\n\n      case \"beefy.finance\":\n        setDefiIcon(beefyfinance);\n        break;\n\n      case \"Narwhalswap\":\n        setDefiIcon(narwhalswap);\n        break;\n\n      case \"STORMSWAP\":\n        setDefiIcon(stormswap);\n        break;\n\n      case \"BnEX\":\n        setDefiIcon(bnexchange);\n        break;\n\n      case \"7up.finance\":\n        setDefiIcon(sevenupfinance);\n        break;\n\n      case \"BFis.finance\":\n        setDefiIcon(bfisfinance);\n        break;\n\n      case \"bStable.finance\":\n        setDefiIcon(bstablefinance);\n        break;\n\n      case \"Dego\":\n        setDefiIcon(dego);\n        break;\n\n      case \"Equator.finance\":\n        setDefiIcon(equatorfinance);\n        break;\n\n      case \"StableXSwap\":\n        setDefiIcon(stablexswap);\n        break;\n\n      case \"QIAN\":\n        setDefiIcon(qian);\n        break;\n\n      case \"PancakeBunny\":\n        setDefiIcon(pancakebunny);\n        break;\n\n      case \"JulSwap\":\n        setDefiIcon(julswap);\n        break;\n\n      case \"JustLiquidity\":\n        setDefiIcon(justliquidity);\n        break;\n\n      case \"AnySwap\":\n        setDefiIcon(anyswap);\n        break;\n\n      case \"CokeFinance\":\n        setDefiIcon(cokefinance);\n        break;\n\n      case \"renVM\":\n        setDefiIcon(renvm);\n        break;\n\n      case \"UniFi\":\n        setDefiIcon(unifiprotocol);\n        break;\n\n      case \"Venus\":\n        setDefiIcon(venus);\n        break;\n\n      case \"Thugs\":\n        setDefiIcon(thugs);\n        break;\n\n      case \"CBerry\":\n        setDefiIcon(cberry);\n        break;\n\n      case \"Jetfuel.Finance\":\n        setDefiIcon(jetfuel);\n        break;\n\n      case \"ACryptoS\":\n        setDefiIcon(acryptos);\n        break;\n\n      case \"BSC Farm\":\n        setDefiIcon(bscfarm);\n        break;\n\n      case \"bDollar Protocol\":\n        setDefiIcon(bdollar);\n        break;\n\n      case \"Autofarm\":\n        setDefiIcon(autofarm);\n        break;\n\n      case \"Binance Agile Set Dollar\":\n        setDefiIcon(basddollar);\n        break;\n\n      case \"Kebab Finance\":\n        setDefiIcon(kebab);\n        break;\n\n      case \"KEEP3R BSC NETWORK\":\n        setDefiIcon(KEEP3RBSC);\n        break;\n\n      case \"CheeseSwap\":\n        setDefiIcon(CheeseSwap);\n        break;\n\n      case \"Midas Dollar\":\n        setDefiIcon(MidasDollar);\n        break;\n\n      case \"CrowFinance\":\n        setDefiIcon(CrowFinance);\n        break;\n\n      case \"Goose Finance\":\n        setDefiIcon(goosefinance);\n        break;\n\n      case \"BSCex\":\n        setDefiIcon(bscex);\n        break;\n\n      case \"Linear Finance\":\n        setDefiIcon(LinearFinance);\n        break;\n\n      case \"Deri Protocol\":\n        setDefiIcon(derifinance);\n        break;\n\n      case \"Belt Finance\":\n        setDefiIcon(beltfinance);\n        break;\n\n      case \"BiFi\":\n        setDefiIcon(bifi);\n        break;\n\n      case \"Multi-Chain Lend (MCL)\":\n        setDefiIcon(multiplier);\n        break;\n\n      case \"BlackHoleSwap\":\n        setDefiIcon(blackholeswap);\n        break;\n\n      case \"Pika Finance\":\n        setDefiIcon(pikafinance);\n        break;\n\n      case \"Bscrunner\":\n        setDefiIcon(bscrunner);\n        break;\n\n      case \"Ellipsis Finance\":\n        setDefiIcon(ellipsisfinance);\n        break;\n\n      case \"DODO\":\n        setDefiIcon(dodo);\n        break;\n\n      case \"Demex\":\n        setDefiIcon(demex);\n        break;\n\n      case \"Helmet\":\n        setDefiIcon(helmet);\n        break;\n\n      case \"ARIES FINANCIAL\":\n        setDefiIcon(ariesfinancial);\n        break;\n\n      case \"Alpha Homora\":\n        setDefiIcon(alphahomora);\n        break;\n\n      case \"Cobalt.finance\":\n        setDefiIcon(cobaltfinance);\n        break;\n\n      case \"SwampFinance\":\n        setDefiIcon(swampfinance);\n        break;\n\n      case \"Nominex\":\n        setDefiIcon(nominex);\n        break;\n\n      case \"Wault.Finance\":\n        setDefiIcon(waultfinance);\n        break;\n\n      case \"WePiggy\":\n        setDefiIcon(wepiggy);\n        break;\n\n      case \"Rabbit Finance\":\n        setDefiIcon(rabbitfinance);\n        break;\n\n      case \"Biswap\":\n        setDefiIcon(biswap);\n        break;\n\n      case \"InsurAce Protocol\":\n        setDefiIcon(insuraceprotocol);\n        break;\n\n      case \"TEN\":\n        setDefiIcon(ten);\n        break;\n\n      case \"MDEX\":\n        setDefiIcon(mdex);\n        break;\n\n      case \"Pumpy\":\n        setDefiIcon(pumpy);\n        break;\n\n      case \"dForce\":\n        setDefiIcon(dforce);\n        break;\n\n      default:\n        let logoUrl = findLogoUrl(defiName);\n        console.log(\"logoUrl: \", logoUrl);\n\n        if (logoUrl != \"\") {\n          setDefiIcon(logoUrl);\n        } else {\n          setLinkTag(\"\");\n        }\n\n        break;\n    }\n\n    {\n      /* pancake */\n    } // <div className=\"defiDetailPageLink noDrag\" style={props.defiName == \"pancake\" ? undefined : { display: \"none\" } }>\n    //     <div className=\"subPageDefiLinkBox\" onClick={() => openWindow(\"https://pancakeswap.finance/\")}><img src={defiOfficialSiteIcon} /><span className=\"subPageDefiLinkBoxTitle\">Official Website</span></div>\n    //     <div className=\"subPageDefiLinkBox\" onClick={() => openWindow(\"https://github.com/pancakeswap\")}><img src={defiGithubIcon} /><span className=\"subPageDefiLinkBoxTitle\">Github</span></div>\n    //     <div className=\"subPageDefiLinkBox\" onClick={() => openWindow(\"https://docs.pancakeswap.finance/\")} style={{\"clear\": \"both\"}}><img src={defiDocsIcon} /><span className=\"subPageDefiLinkBoxTitle\">Docs</span></div>\n    //     <div className=\"subPageDefiLinkBox\" onClick={() => openWindow(\"https://twitter.com/pancakeswap\")}><img src={defiTwitterIcon} /><span className=\"subPageDefiLinkBoxTitle\">Twitter</span></div>\n    //     <div className=\"subPageDefiLinkBox\" onClick={() => openWindow(\"https://t.me/PancakeSwap\")}><img src={defiTelegramIcon} /><span className=\"subPageDefiLinkBoxTitle\">Telegram</span></div>\n    //     <div className=\"subPageDefiLinkBox\" onClick={() => openWindow(\"https://medium.com/@pancakeswap\")}><img src={defiBlogIcon} /><span className=\"subPageDefiLinkBoxTitle\">Blog</span></div>\n    // </div>\n    // defistationApplicationList.json 에서 i 번째... i가 뭔지 찾기\n\n    let index = findDefiIndexNum(defiName);\n    console.log(\"[0524] test github: \", defistationApplicationList[index][\"Github URL\"]);\n    setProjectBtnLink( /*#__PURE__*/React.createElement(\"div\", {\n      className: \"defiDetailPageLink noDrag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 939,\n        columnNumber: 13\n      }\n    }, defistationApplicationList[index][\"Project Official Website (URL)\"].indexOf(\"http\") != -1 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"subPageDefiLinkBox\",\n      onClick: () => openWindow(defistationApplicationList[index][\"Project Official Website (URL)\"]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 942,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: defiOfficialSiteIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 942,\n        columnNumber: 155\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"subPageDefiLinkBoxTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 942,\n        columnNumber: 189\n      }\n    }, \"Official Website\")) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"subPageDefiLinkBox disableBtn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 943,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: defiOfficialSiteIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 943,\n        columnNumber: 70\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"subPageDefiLinkBoxTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 943,\n        columnNumber: 104\n      }\n    }, \"Official Website\")), // defistationApplicationList[index][\"Github URL\"] != \"\"\n    defistationApplicationList[index][\"Github URL\"].indexOf(\"http\") != -1 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"subPageDefiLinkBox\",\n      onClick: () => openWindow(defistationApplicationList[index][\"Github URL\"]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 948,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: defiGithubIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 948,\n        columnNumber: 135\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"subPageDefiLinkBoxTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 948,\n        columnNumber: 163\n      }\n    }, \"Github\")) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"subPageDefiLinkBox disableBtn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 949,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: defiGithubIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 949,\n        columnNumber: 70\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"subPageDefiLinkBoxTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 949,\n        columnNumber: 98\n      }\n    }, \"Github\")), // defistationApplicationList[index][\"Developer Docs URL\"] != \"\"\n    defistationApplicationList[index][\"Developer Docs URL\"].indexOf(\"http\") != -1 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"subPageDefiLinkBox\",\n      onClick: () => openWindow(defistationApplicationList[index][\"Developer Docs URL\"]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 954,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: defiDocsIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 954,\n        columnNumber: 143\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"subPageDefiLinkBoxTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 954,\n        columnNumber: 169\n      }\n    }, \"Docs\")) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"subPageDefiLinkBox disableBtn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 955,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: defiDocsIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 955,\n        columnNumber: 70\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"subPageDefiLinkBoxTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 955,\n        columnNumber: 96\n      }\n    }, \"Docs\")), // defistationApplicationList[index][\"Twitter URL\"] != \"\"\n    defistationApplicationList[index][\"Twitter URL\"].indexOf(\"http\") != -1 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"subPageDefiLinkBox\",\n      onClick: () => openWindow(defistationApplicationList[index][\"Twitter URL\"]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 960,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: defiTwitterIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 960,\n        columnNumber: 136\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"subPageDefiLinkBoxTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 960,\n        columnNumber: 165\n      }\n    }, \"Twitter\")) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"subPageDefiLinkBox disableBtn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 961,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: defiTwitterIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 961,\n        columnNumber: 70\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"subPageDefiLinkBoxTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 961,\n        columnNumber: 99\n      }\n    }, \"Twitter\")), // defistationApplicationList[index][\"Telegram(EN) URL\"] != \"\"\n    defistationApplicationList[index][\"Telegram(EN) URL\"].indexOf(\"http\") != -1 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"subPageDefiLinkBox\",\n      onClick: () => openWindow(defistationApplicationList[index][\"Telegram(EN) URL\"]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 966,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: defiTelegramIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 966,\n        columnNumber: 141\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"subPageDefiLinkBoxTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 966,\n        columnNumber: 171\n      }\n    }, \"Telegram\")) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"subPageDefiLinkBox disableBtn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 967,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: defiTelegramIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 967,\n        columnNumber: 70\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"subPageDefiLinkBoxTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 967,\n        columnNumber: 100\n      }\n    }, \"Telegram\")), // defistationApplicationList[index][\"Medium Blog URL\"] != \"\"\n    defistationApplicationList[index][\"Medium Blog URL\"].indexOf(\"http\") != -1 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"subPageDefiLinkBox\",\n      onClick: () => openWindow(defistationApplicationList[index][\"Medium Blog URL\"]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 972,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: defiBlogIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 972,\n        columnNumber: 140\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"subPageDefiLinkBoxTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 972,\n        columnNumber: 166\n      }\n    }, \"Blog\")) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"subPageDefiLinkBox disableBtn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 973,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: defiBlogIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 973,\n        columnNumber: 70\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"subPageDefiLinkBoxTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 973,\n        columnNumber: 96\n      }\n    }, \"Blog\"))));\n  } // ------------ 모바일 구글 차트를 위한 resize 체크 START ------------\n  // function resizeChart() {\n  //     chart.draw(ChartData, options);\n  // }\n\n\n  function resizedw() {\n    // Haven't resized in 100ms!\n    console.log(\"[0427] window.innerWidth: \", window.innerWidth);\n    console.log(\"[0427] screen.width: \", screen.width);\n\n    if (isMobile) {\n      if (screen.width <= 320) {\n        if (viewWidth != \"86vw\") {\n          setViewWidth(\"89vw\");\n          setChartWidth(\"85%\");\n        }\n      } else if (screen.width <= 1034) {\n        console.log(\"1034 이하\");\n\n        if (viewWidth != \"91vw\") {\n          window.location.replace(location.pathname);\n        }\n      } else {\n        console.log(\"1034 초과\");\n\n        if (viewWidth != \"750px\") {\n          window.location.replace(location.pathname);\n        }\n      }\n    } else {\n      if (window.innerWidth <= 320) {\n        if (viewWidth != \"86vw\") {\n          setViewWidth(\"89vw\");\n          setChartWidth(\"85%\");\n        }\n      } else if (window.innerWidth <= 1034) {\n        console.log(\"1034 이하\");\n\n        if (viewWidth != \"91vw\") {\n          window.location.replace(location.pathname);\n        }\n      } else {\n        console.log(\"1034 초과\");\n\n        if (viewWidth != \"750px\") {\n          window.location.replace(location.pathname);\n        }\n      }\n    }\n  }\n\n  var doit;\n\n  function checkWindowWidth() {\n    // var doit;\n    var width = window.innerWidth; // var height = window.innerHeight;\n\n    window.onresize = function () {\n      clearTimeout(doit); // doit = setTimeout(resizedw, 100);\n      // if (window.innerWidth != width) {\n      //     //Do something\n      //     doit = setTimeout(resizedw, 100);\n      // }\n      // if ($(window).width() != width || $(window).height() != height) {\n      //     //Do something\n      // }\n\n      if (window.innerWidth != width) {\n        clearTimeout(doit);\n        doit = setTimeout(resizedw, 100);\n      }\n    };\n  } // function checkWindowWidth() {\n  //     if (window.matchMedia(\"(max-width: 1035px)\").matches) {\n  //         /* the viewport is less than or exactly 500 pixels wide */\n  //         console.log(\"1034 이하\");\n  //         // 홈 화면인 경우\n  //         window.location.replace(location.pathname);\n  //     } else {\n  //         /* the viewport is more than 500 pixels wide */\n  //         console.log(\"1034 초과\");\n  //         // 홈 화면인 경우\n  //         window.location.replace(location.pathname);\n  //     }\n  // }\n  // ------------ 모바일 구글 차트를 위한 resize 체크 END ------------\n\n\n  var isMobile = false;\n  const [sponsoredVal, setSponsoredVal] = useState();\n  useEffect(() => {\n    // Sponsored\n    if (getSponsors().indexOf(props.defiName) != -1) {\n      setSponsoredVal( /*#__PURE__*/React.createElement(\"div\", {\n        className: \"sponsored\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1076,\n          columnNumber: 29\n        }\n      }, \"Sponsored\"));\n    }\n\n    getChart(props.defiName); // 2) 414px ~ 1034px: 374px, 88%\n    // 3) 360px ~ 413px: 290px, 88%\n    // 4) 1px ~ 359px: 270px, 88%\n    // if (window.innerWidth >= 414 && window.innerWidth <= 1034) {\n    //     setViewWidth(\"374px\");\n    //     setChartWidth(\"88%\");\n    //     setTvlChartCardTitleValue(\"TVL\");\n    // } else if (window.innerWidth >= 360 && window.innerWidth < 414) {\n    //     setViewWidth(\"290px\");\n    //     setChartWidth(\"88%\");\n    //     setTvlChartCardTitleValue(\"TVL\");\n    // } else if (window.innerWidth >= 0 && window.innerWidth < 360) {\n    //     setViewWidth(\"270px\");\n    //     setChartWidth(\"88%\");\n    //     setTvlChartCardTitleValue(\"TVL\");\n    // }\n    // if (window.innerWidth <= 1034) {\n    //     setViewWidth(\"870px\");\n    //     setChartWidth(\"89%\");\n    // } else {\n    //     setViewWidth(\"750px\");\n    //     setChartWidth(\"89%\");\n    // }\n\n    console.log(\"screen.width: \", screen.width); // 2) 1024px: 970px, 94%\n    // 3) 768px: 708px, 94%\n    // 4) 414px ~ 767px: 374px, 88%\n    // 5) 360px ~ 413px: 290px, 88%\n    // 6) 1px ~ 359px: 270px, 88%\n    // var isMobile = false; //initiate as false\n    // device detection\n\n    if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(navigator.userAgent.substr(0, 4))) {\n      isMobile = true;\n    }\n\n    setFakeControls([]);\n\n    if (isMobile) {\n      if (screen.width > 1034) {\n        console.log(\"1034 초과\");\n        setViewWidth(\"750px\");\n        setChartWidth(\"88%\");\n      } else if (screen.width <= 1034 && screen.width > 320) {\n        console.log(\"1034 이하\");\n\n        if (props.defiName == \"DeFi\") {\n          // 메인 페이지\n          setViewWidth(\"91vw\");\n          setChartWidth(\"85%\");\n        } else {\n          // 서브 페이지\n          setViewWidth(\"89vw\");\n          setChartWidth(\"85%\");\n        }\n      } else {\n        console.log(\"320 이하\");\n        setViewWidth(\"89vw\");\n        setChartWidth(\"85%\");\n      }\n    } else {\n      if (window.innerWidth > 1034) {\n        console.log(\"1034 초과\"); // if (props.defiName == \"DeFi\") {\n        //     setViewWidth(\"750px\");\n        // } else {\n        //     setViewWidth(\"750px\");\n        // }\n\n        setViewWidth(\"750px\");\n        setChartWidth(\"88%\");\n      } else if (window.innerWidth <= 1034 && window.innerWidth > 320) {\n        console.log(\"1034 이하\");\n        setViewWidth(\"91vw\");\n        setChartWidth(\"85%\");\n      } else {\n        console.log(\"320 이하\");\n        setViewWidth(\"89vw\");\n        setChartWidth(\"85%\");\n      }\n    }\n\n    checkWindowWidth();\n    console.count(\"TotalValue render\");\n    console.log(\"props.defiName: \", props.defiName);\n    selectOfficialLink(props.defiName);\n\n    if (props.defiName == \"DeFi\") {\n      // 메인 페이지\n      setDualYUnitText(\"TXs\");\n    } else {\n      // 서브 페이지\n      setDualYUnitText(\"USD\");\n    }\n\n    return () => {// console.log('cleanup');\n      // clearTimeout(timer);\n    };\n  }, [props.defiName, global.tvl1DayPercent, linkTag, viewWidth, chartPeriod]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"totalValue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1188,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1190,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"tvlTitleBox\",\n    style: props.defiName != \"DeFi\" ? undefined : {\n      display: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1191,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1192,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"tvlSubPageTitleIconLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1193,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1194,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: defiIcon,\n    onError: e => {\n      e.target.onerror = null;\n      e.target.src = defaultIcon;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1194,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1195,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1195,\n      columnNumber: 33\n    }\n  }, getOfficialDefiName(props.defiName))), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1197,\n      columnNumber: 29\n    }\n  }, sponsoredVal))), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1200,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navBox noDrag\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1201,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"navHome\",\n    onClick: () => movePage(\"/\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1201,\n      columnNumber: 56\n    }\n  }, \"DEFISTATION\"), \" > \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"navDefiName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1201,\n      columnNumber: 136\n    }\n  }, props.defiName))))), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"totalValueUl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1206,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1207,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tvlChartCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1209,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"tvlChartCardUl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1210,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1211,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"tvlChartLegend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1212,\n      columnNumber: 33\n    }\n  }, chartLegendLabel), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"tvlChartCardTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1215,\n      columnNumber: 33\n    }\n  }, tvlChartCardTitleValue, \" \", getOfficialDefiName(props.defiName)), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"tvlValueUsd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1216,\n      columnNumber: 33\n    }\n  }, \"$ \", totalValueLockedUsd), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"tvlChartUnitY\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1217,\n      columnNumber: 33\n    }\n  }, \"(\", currencyFullName, \" USD)\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"tvlChartUnitYRight\",\n    style: props.defiName != \"DeFi\" ? {\n      display: \"none\"\n    } : undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1218,\n      columnNumber: 33\n    }\n  }, \"(\", txsUnitForDualY, \" \", dualYUnitText, \")\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"tvlChartUnitYRightOnSubPage\",\n    style: props.defiName != \"DeFi\" ? undefined : {\n      display: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1219,\n      columnNumber: 33\n    }\n  }, \"(\", dualYUnitText, \")\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: props.defiName != \"DeFi\" ? {\n      display: \"none\"\n    } : undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1222,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Chart, {\n    controls: fakeControls,\n    width: viewWidth,\n    height: '220px',\n    id: \"tvlGoogleChart\",\n    style: window.innerWidth < 441 ? {\n      \"margin-left\": \"-7px\",\n      \"margin-top\": \"28px\"\n    } : {\n      \"margin-left\": \"-7px\",\n      \"margin-top\": \"0px\"\n    },\n    chartType: \"LineChart\",\n    loader: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"width\": viewWidth,\n        \"height\": \"270px\",\n        \"text-align\": \"center\",\n        \"margin-top\": \"100px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1230,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1230,\n        columnNumber: 147\n      }\n    })),\n    data: chartData,\n    options: {\n      backgroundColor: \"#fff\",\n      legend: \"none\",\n      // animation : { duration:400, easing:'out'},\n      // Gives each series an axis that matches the vAxes number below.\n      series: {\n        0: {\n          targetAxisIndex: 0\n        },\n        1: {\n          targetAxisIndex: 1\n        }\n      },\n      hAxis: {\n        textStyle: {\n          color: '#9d9fa4',\n          fontSize: 11\n        },\n        slantedText: true,\n        baselineColor: '#efefef',\n        gridlineColor: '#efefef'\n      },\n      vAxis: {\n        // minValue: minTvl,\n        textStyle: {\n          color: '#9d9fa4'\n        },\n        baselineColor: '#efefef',\n        gridlineColor: '#efefef'\n      },\n      colors: [\"#FDCE32\", \"#888A8F\"],\n      chartArea: {\n        width: chartWidth,\n        height: '70%'\n      },\n      focusTarget: 'category',\n      crosshair: {\n        orientation: 'vertical',\n        trigger: 'focus',\n        color: '#fff',\n        opacity: 0.1\n      }\n    },\n    rootProps: {\n      'data-testid': '2'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1223,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: props.defiName != \"DeFi\" ? undefined : {\n      display: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1272,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Chart, {\n    id: \"tvlGoogleChart\",\n    width: viewWidth,\n    height: '220px',\n    style: window.innerWidth < 441 ? {\n      \"margin-left\": \"-7px\",\n      \"margin-top\": \"28px\"\n    } : {\n      \"margin-left\": \"-7px\",\n      \"margin-top\": \"0px\"\n    },\n    chartType: \"LineChart\",\n    loader: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"width\": viewWidth,\n        \"height\": \"270px\",\n        \"text-align\": \"center\",\n        \"margin-top\": \"100px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1279,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1279,\n        columnNumber: 147\n      }\n    })),\n    data: chartData,\n    options: {\n      backgroundColor: \"#fff\",\n      legend: \"none\",\n      // animation : { duration:400, easing:'out'},\n      // Gives each series an axis that matches the vAxes number below.\n      series: {\n        0: {\n          targetAxisIndex: 0\n        },\n        1: {\n          targetAxisIndex: 1\n        }\n      },\n      hAxis: {\n        textStyle: {\n          color: '#9d9fa4',\n          fontSize: 11\n        },\n        slantedText: true,\n        baselineColor: '#efefef',\n        gridlineColor: '#efefef'\n      },\n      vAxis: {\n        minValue: props.defiName == \"JulSwap\" || props.defiName == \"BiFi\" || props.defiName == \"ForTube\" || props.defiName == \"Bakery Swap\" || props.defiName == \"Nerve Finance\" || props.defiName == \"Alpha Homora\" || props.defiName == \"Smoothy\" || props.defiName == \"Elephant Money\" || props.defiName == \"Demex\" || props.defiName == \"Kebab Finance\" || props.defiName == \"Biswap\" || props.defiName == \"TEN\" || props.defiName == \"dForce\" || props.defiName == \"ARIES FINANCIAL\" || props.defiName == \"EmiSwap\" || props.defiName == \"ApeSwap\" ? 0.0001 : minTvl,\n        textStyle: {\n          color: '#9d9fa4'\n        },\n        baselineColor: '#efefef',\n        gridlineColor: '#efefef'\n      },\n      colors: [\"#FDCE32\", \"#34ab62\"],\n      chartArea: {\n        width: chartWidth,\n        height: '70%'\n      },\n      focusTarget: 'category',\n      crosshair: {\n        orientation: 'vertical',\n        trigger: 'focus',\n        color: '#fff',\n        opacity: 0.1\n      }\n    },\n    rootProps: {\n      'data-testid': '2'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1273,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1337,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"periodBtns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1340,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    style: chartPeriod == 7 ? undefined : {\n      display: \"none\"\n    },\n    className: \"periodBtnSelected\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1341,\n      columnNumber: 37\n    }\n  }, \"7d\"), /*#__PURE__*/React.createElement(\"button\", {\n    style: chartPeriod == 7 ? {\n      display: \"none\"\n    } : undefined,\n    className: \"periodBtn\",\n    onClick: () => setChartPeriod(\"7\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1342,\n      columnNumber: 37\n    }\n  }, \"7d\"), /*#__PURE__*/React.createElement(\"button\", {\n    style: chartPeriod == 30 ? undefined : {\n      display: \"none\"\n    },\n    className: \"periodBtnSelected\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1344,\n      columnNumber: 37\n    }\n  }, \"1M\"), /*#__PURE__*/React.createElement(\"button\", {\n    style: chartPeriod == 30 ? {\n      display: \"none\"\n    } : undefined,\n    className: \"periodBtn\",\n    onClick: () => setChartPeriod(\"30\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1345,\n      columnNumber: 37\n    }\n  }, \"1M\"), /*#__PURE__*/React.createElement(\"button\", {\n    style: chartPeriod == 90 ? undefined : {\n      display: \"none\"\n    },\n    className: \"periodBtnSelected\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1347,\n      columnNumber: 37\n    }\n  }, \"3M\"), /*#__PURE__*/React.createElement(\"button\", {\n    style: chartPeriod == 90 ? {\n      display: \"none\"\n    } : undefined,\n    className: \"periodBtn\",\n    onClick: () => setChartPeriod(\"90\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1348,\n      columnNumber: 37\n    }\n  }, \"3M\"), /*#__PURE__*/React.createElement(\"button\", {\n    style: chartPeriod == 180 ? undefined : {\n      display: \"none\"\n    },\n    className: \"periodBtnSelected\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1350,\n      columnNumber: 37\n    }\n  }, \"6M\"), /*#__PURE__*/React.createElement(\"button\", {\n    style: chartPeriod == 180 ? {\n      display: \"none\"\n    } : undefined,\n    className: \"periodBtn\",\n    onClick: () => setChartPeriod(\"180\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1351,\n      columnNumber: 37\n    }\n  }, \"6M\")))))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"buttonsNextToChart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1357,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tvlLink0\",\n    style: props.defiName == \"DeFi\" ? undefined : {\n      display: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1359,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TvlLink, {\n    icon: bscLogo,\n    title: \"Binance Smart Chain\",\n    subTitle: \"EVM compatible PoS\",\n    goPage: \"https://www.binance.org/en/smartChain\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1360,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(TvlLink, {\n    icon: bscScanLogo,\n    title: \"BscScan\",\n    subTitle: \"BSC Explorer\",\n    goPage: \"https://bscscan.com/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1361,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(TvlLink, {\n    icon: exchangeLogo,\n    title: \"Exchange\",\n    subTitle: \"Crypto asset exchange\",\n    goPage: \"https://www.binance.com/en?ref=39076268\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1362,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(TvlLink, {\n    icon: cosmostationLogo,\n    title: \"Polybees Defi\",\n    subTitle: \"Access DeFi\",\n    goPage: \"https://polybeespresale.netlify.app/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1363,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tvlLink\",\n    style: props.defiName == \"DeFi\" ? {\n      display: \"none\"\n    } : undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1365,\n      columnNumber: 21\n    }\n  }, projectBtnLink))));\n});\nexport default TotalValue;","map":{"version":3,"sources":["C:/Users/user/Documents/GitHub/watch/src/components/totalValue/TotalValue.js"],"names":["React","Component","Fragment","useState","useEffect","observer","useHistory","useLocation","_","useStores","getSponsors","numberWithCommas","capitalize","replaceAll","getCurrencyUnit","getCurrencyUnitFullName","getCurrencyDigit","getOfficialDefiName","TvlLink","Chart","defistationApplicationList","loading","defaultIcon","bscLogo","bscScanLogo","exchangeLogo","cosmostationLogo","alphafinance","bakeryswap","beefyfinance","bscswap","burgerswap","creamfinance","fortube","fryworld","pancake","peachswap","spartanprotocol","stakecow","streamity","stormswap","narwhalswap","bnexchange","softdrinkswap","nyanswap","sevenupfinance","bfisfinance","bstablefinance","dego","equatorfinance","stablexswap","qian","pancakebunny","julswap","justliquidity","anyswap","cokefinance","renvm","unifiprotocol","venus","thugs","cberry","jetfuel","acryptos","autofarm","basddollar","bdollar","bscfarm","MidasDollar","LinearFinance","KEEP3RBSC","kebab","goosefinance","CrowFinance","CheeseSwap","bscex","derifinance","beltfinance","bifi","blackholeswap","multiplier","pikafinance","bscrunner","ellipsisfinance","demex","dodo","helmet","ariesfinancial","alphahomora","cobaltfinance","swampfinance","nominex","waultfinance","wepiggy","rabbitfinance","biswap","insuraceprotocol","ten","mdex","pumpy","dforce","TotalValue","props","global","history","location","responseError","setResponseError","response","setResponse","chartPeriod","setChartPeriod","chartLegendLabel","setChartLegendLabel","chartData","setChartData","totalValueLockedUsd","setTotalValueLockedUsd","minTvl","setMinTvl","linkTag","setLinkTag","defiIcon","setDefiIcon","dualYUnitText","setDualYUnitText","projectBtnLink","setProjectBtnLink","currencyFullName","setCurrencyFullName","txsUnitForDualY","setTxsUnitForDualY","tvlChartCardTitleValue","setTvlChartCardTitleValue","viewWidth","setViewWidth","chartWidth","setChartWidth","fakeControls","setFakeControls","monthNames","getMonthAndDay","date","monthName","getMonth","day","getDate","urlFlagDetail","setUrlFlagDetail","getChart","defiName","urlStr","changeTotalValueLockedUsd","changeTvl1DayPercent","chartFullUrl","chartFullUrl2","res","fetch","defistationApiUrl","method","headers","Authorization","auth","json","then","tempChartData","initProjectTvlIndex","result","resultObj","resultArr","Object","keys","map","key","Number","digitForTx","currencyUnitForTx","tempCurrencyFullNameForTx","sumTokenPrice","dailyTxObj","dailyTx","dailyTxArr","latestTxVal","latestTxChange","j","length","changeTransactions24h","changeTransactions24hPercent","toFixed","index","findDefiIndexNum","tokenSymbolName","toUpperCase","priceObj","price","priceArr","i","initTimestamp","tempMinTvl","digit","currencyUnit","tempCurrencyFullName","subChartStartingCorrectionFlag","prevCurrencyNum","nextCurrencyNum","prevTokenPrice","nextTokenPrice","currencyNum","prevCurrentNum1","prevCurrentNum2","tempDailyTx","push","Date","tempPrice","console","log","calCurrencyNum","calTokenPrice","remainDataLength","shift","Math","floor","unshift","latestTvl","pastTvl","resultTvl1DayPercent","isNaN","details","resultDetailsObj","changeChartDataDetails","catch","err","movePage","path","openWindow","window","open","findLogoUrl","logoUrl","selectOfficialLink","indexOf","defiOfficialSiteIcon","defiGithubIcon","defiDocsIcon","defiTwitterIcon","defiTelegramIcon","defiBlogIcon","resizedw","innerWidth","screen","width","isMobile","replace","pathname","doit","checkWindowWidth","onresize","clearTimeout","setTimeout","sponsoredVal","setSponsoredVal","test","navigator","userAgent","substr","count","tvl1DayPercent","undefined","display","e","target","onerror","src","backgroundColor","legend","series","targetAxisIndex","hAxis","textStyle","color","fontSize","slantedText","baselineColor","gridlineColor","vAxis","colors","chartArea","height","focusTarget","crosshair","orientation","trigger","opacity","minValue"],"mappings":"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","sourcesContent":["import React, { Component, Fragment, useState, useEffect } from 'react';\nimport { observer } from 'mobx-react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport _ from \"lodash\";\nimport useStores from '../../useStores';\nimport { getSponsors } from '../../sponsor/Sponsor';\n\nimport { numberWithCommas, capitalize, replaceAll, getCurrencyUnit, getCurrencyUnitFullName, getCurrencyDigit, getOfficialDefiName } from '../../util/Util';\nimport TvlLink from './tvlLink/TvlLink';\n\nimport Chart from \"react-google-charts\";\n\nimport defistationApplicationList from \"../../defistationApplicationList.json\";\n\nimport loading from \"../../assets/images/loading.gif\";\n\nimport defaultIcon from \"../../assets/images/defiLogo/project-none@2x.png\";\nimport bscLogo from \"../../assets/images/bsc_logo@2x.png\";\nimport bscScanLogo from \"../../assets/images/bscscan_logo@2x.png\";\nimport exchangeLogo from \"../../assets/images/exchange_logo@2x.png\";\nimport cosmostationLogo from \"../../assets/images/cosmostation_logo@2x.png\";\n// 프로젝트 아이콘\nimport alphafinance from \"../../assets/images/defiLogo/alphafinance@2x.png\";\nimport bakeryswap from \"../../assets/images/defiLogo/bakeryswap@2x.png\";\nimport beefyfinance from \"../../assets/images/defiLogo/beefyfinance@2x.png\";\nimport bscswap from \"../../assets/images/defiLogo/bscswap@2x.png\";\nimport burgerswap from \"../../assets/images/defiLogo/burgerswap@2x.png\";\nimport creamfinance from \"../../assets/images/defiLogo/creamfinance@2x.png\";\nimport fortube from \"../../assets/images/defiLogo/fortube@2x.png\";\nimport fryworld from \"../../assets/images/defiLogo/fryworld@2x.png\";\nimport pancake from \"../../assets/images/defiLogo/pancakeswap@2x.png\";\nimport peachswap from \"../../assets/images/defiLogo/peachswap@2x.png\";\nimport spartanprotocol from \"../../assets/images/defiLogo/spartanprotocol@2x.png\";\nimport stakecow from \"../../assets/images/defiLogo/stakecow@2x.png\";\nimport streamity from \"../../assets/images/defiLogo/streamity@2x.png\";\nimport stormswap from \"../../assets/images/defiLogo/stormswap@2x.png\";\nimport narwhalswap from \"../../assets/images/defiLogo/narwhalswap@2x.png\";\nimport bnexchange from \"../../assets/images/defiLogo/bnexchange@2x.png\";\nimport softdrinkswap from \"../../assets/images/defiLogo/softdrinkswap@2x.png\";\nimport nyanswap from \"../../assets/images/defiLogo/nyanswap@2x.png\";\nimport sevenupfinance from \"../../assets/images/defiLogo/7upfinance@2x.png\";\nimport bfisfinance from \"../../assets/images/defiLogo/bfisfinance@2x.png\";\nimport bstablefinance from \"../../assets/images/defiLogo/bstablefinance@2x.png\";\nimport dego from \"../../assets/images/defiLogo/dego@2x.png\";\nimport equatorfinance from \"../../assets/images/defiLogo/equatorfinance@2x.png\";\nimport stablexswap from \"../../assets/images/defiLogo/stablexswap@2x.png\";\nimport qian from \"../../assets/images/defiLogo/qian@2x.png\";\nimport pancakebunny from \"../../assets/images/coins/pancakebunny.png\";\nimport julswap from \"../../assets/images/defiLogo/julswap@2x.png\";\nimport justliquidity from \"../../assets/images/defiLogo/justliquidity@2x.png\";\nimport anyswap from \"../../assets/images/defiLogo/anyswap@2x.png\";\nimport cokefinance from \"../../assets/images/defiLogo/cokefinance@2x.png\";\nimport renvm from \"../../assets/images/defiLogo/renvm@2x.png\";\nimport unifiprotocol from \"../../assets/images/defiLogo/unifiprotocol@2x.png\";\nimport venus from \"../../assets/images/defiLogo/venus@2x.png\";\nimport thugs from \"../../assets/images/defiLogo/thugs@2x.png\";\nimport cberry from \"../../assets/images/defiLogo/cberry@2x.png\";\nimport jetfuel from \"../../assets/images/defiLogo/jetfuel@2x.png\";\nimport acryptos from \"../../assets/images/defiLogo/acryptos@2x.png\";\nimport autofarm from \"../../assets/images/defiLogo/autofarm@2x.png\";\nimport basddollar from \"../../assets/images/defiLogo/basddollar@2x.png\";\nimport bdollar from \"../../assets/images/defiLogo/bdollar@2x.png\";\nimport bscfarm from \"../../assets/images/defiLogo/bscfarm@2x.png\";\nimport MidasDollar from \"../../assets/images/defiLogo/MidasDollar@2x.png\";\nimport LinearFinance from \"../../assets/images/defiLogo/LinearFinance@2x.png\";\nimport KEEP3RBSC from \"../../assets/images/defiLogo/KEEP3RBSC@2x.png\";\nimport kebab from \"../../assets/images/defiLogo/kebab@2x.png\";\nimport goosefinance from \"../../assets/images/defiLogo/goosefinance@2x.png\";\nimport CrowFinance from \"../../assets/images/defiLogo/CrowFinance@2x.png\";\nimport CheeseSwap from \"../../assets/images/defiLogo/CheeseSwap@2x.png\";\nimport bscex from \"../../assets/images/defiLogo/bscex@2x.png\";\nimport derifinance from \"../../assets/images/defiLogo/derifinance@2x.png\";\nimport beltfinance from \"../../assets/images/defiLogo/belt@2x.png\";\nimport bifi from \"../../assets/images/defiLogo/bififinance@2x.png\";\nimport blackholeswap from \"../../assets/images/defiLogo/blackholeswap@2x.png\";\nimport multiplier from \"../../assets/images/defiLogo/multiplier@2x.png\";\nimport pikafinance from \"../../assets/images/defiLogo/pikafinance@2x.png\";\nimport bscrunner from \"../../assets/images/defiLogo/bscrunner@2x.png\";\nimport ellipsisfinance from \"../../assets/images/defiLogo/ellipsisfinance@2x.png\";\nimport demex from \"../../assets/images/defiLogo/demex@2x.png\";\nimport dodo from \"../../assets/images/defiLogo/dodo@2x.png\";\nimport helmet from \"../../assets/images/defiLogo/helmet@2x.png\";\nimport ariesfinancial from \"../../assets/images/defiLogo/ariesfinancial@2x.png\";\nimport alphahomora from \"../../assets/images/defiLogo/alphahomora@2x.png\";\nimport cobaltfinance from \"../../assets/images/defiLogo/cobaltfinance@2x.png\";\nimport swampfinance from \"../../assets/images/defiLogo/swampfinance@2x.png\";\nimport nominex from \"../../assets/images/defiLogo/Nominex@2x.png\";\nimport waultfinance from \"../../assets/images/defiLogo/waultfinance@2x.png\";\nimport wepiggy from \"../../assets/images/defiLogo/wepiggy@2x.png\";\nimport rabbitfinance from \"../../assets/images/defiLogo/rabbitfinance@2x.png\";\nimport biswap from \"../../assets/images/defiLogo/biswap@2x.png\";\nimport insuraceprotocol from \"../../assets/images/defiLogo/insuraceprotocol@2x.png\";\nimport ten from \"../../assets/images/defiLogo/ten@2x.png\";\nimport mdex from \"../../assets/images/defiLogo/mdex@2x.png\";\nimport pumpy from \"../../assets/images/defiLogo/pumpy@2x.png\";\nimport dforce from \"../../assets/images/defiLogo/dforce@2x.png\";\n\n// Defi Link 아이콘\nimport defiOfficialSiteIcon from \"../../assets/images/defiLink/officialsite.svg\";\nimport defiGithubIcon from \"../../assets/images/defiLink/github.svg\";\nimport defiDocsIcon from \"../../assets/images/defiLink/docs.svg\";\nimport defiTwitterIcon from \"../../assets/images/defiLink/twitter.svg\";\nimport defiTelegramIcon from \"../../assets/images/defiLink/telegram.svg\";\nimport defiBlogIcon from \"../../assets/images/defiLink/blog.svg\";\n\nconst TotalValue = observer((props) => {\n    const { global } = useStores();\n\n    const history = useHistory();\n    const location = useLocation();\n\n    const [responseError, setResponseError] = useState();\n    const [response, setResponse] = useState({});\n\n    // all, 1year, 90days\n    const [chartPeriod, setChartPeriod] = useState(\"180\");    // 7, 30, 90, 180\n\n    const [chartLegendLabel, setChartLegendLabel] = useState();\n\n    const [chartData, setChartData] = useState(['x', 'TVL(USD)']);\n    const [totalValueLockedUsd, setTotalValueLockedUsd] = useState(0);\n    const [minTvl, setMinTvl] = useState(0);\n    const [linkTag, setLinkTag] = useState(\"\");\n    const [defiIcon, setDefiIcon] = useState();\n\n    // 차트 오른쪽 Unit: TXs or USD\n    const [dualYUnitText, setDualYUnitText] = useState(\"TXs\");\n\n    const [projectBtnLink, setProjectBtnLink] = useState();\n\n    const [currencyFullName, setCurrencyFullName] = useState(\"\");\n    const [txsUnitForDualY, setTxsUnitForDualY] = useState(\"\");\n\n    // PC에서는 Total Value Locked, mobile에서는 TVL\n    // const [tvlChartCardTitleValue, setTvlChartCardTitleValue] = useState(\"Total Value Locked\");\n    // const [tvlChartCardTitleValue, setTvlChartCardTitleValue] = useState(\"TVL & TXs in BSC\");\n    const [tvlChartCardTitleValue, setTvlChartCardTitleValue] = useState(\"BSC\");\n\n    // 1) 1034px 이상\n    const [viewWidth, setViewWidth] = useState(\"750px\");\n    // const [viewWidth, setViewWidth] = useState(\"80vw\");\n    const [chartWidth, setChartWidth] = useState(\"89%\");\n\n    // https://github.com/rakannimer/react-google-charts/issues/209\n    const [fakeControls, setFakeControls] = useState([]);\n\n    // 2) 1024px: 270px, 88%\n    // 3) 768px: 270px, 88%\n    // 4) 414px ~ 767px: 374px, 88%\n    // 5) 360px ~ 413px: 290px, 88%\n    // 6) 1px ~ 359px: 270px, 88%\n\n    // const defistationApiUrl = \"https://api.defistation.io\";\n\n    const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    function getMonthAndDay(date) {\n        let monthName = monthNames[date.getMonth()];\n        let day = date.getDate();\n        return monthName + \" \" + day;\n    }\n\n    // const [urlFlag1, setUrlFlag1] = useState(false);\n    const [urlFlagDetail, setUrlFlagDetail] = useState(\"\");\n\n    async function getChart(defiName) {\n        // if (defiName == \"DeFi\") {\n        //     if (urlFlag1) return;\n        // }\n        // setUrlFlag1(true);\n        \n        // console.log(\"getChart 함수 시작\");\n\n        let urlStr = \"\";\n        if (defiName == \"DeFi\") {\n            urlStr = \"all\";\n            setChartData(['x', 'TVL(USD)', 'Transactions']);\n        } else {\n            urlStr = defiName;\n            setChartData(['x', 'TVL(USD)', 'Token Price(USD)']);\n        }\n\n        // console.log(\"urlStr: \", urlStr);\n        if (urlStr == \"\") {\n            global.changeTotalValueLockedUsd(\"$ 0\");\n            global.changeTvl1DayPercent(0);\n            return;\n        }\n\n        let chartFullUrl = \"/chart/\" + urlStr + \"?days=\" + chartPeriod;\n        \n        // detail\n        if (urlFlagDetail == chartFullUrl) return;\n        setUrlFlagDetail(chartFullUrl);\n\n        // 7d, 30d, 90d 모두 days 90으로 가져옴\n        let chartFullUrl2;\n        // if (chartPeriod == 180) {\n        //     chartFullUrl2 = \"/chart/\" + urlStr + \"?days=\" + \"180\";\n        // } else {\n        //     chartFullUrl2 = \"/chart/\" + urlStr + \"?days=\" + \"90\";\n        // }\n        chartFullUrl2 = \"/chart/\" + urlStr + \"?days=\" + \"180\";\n        \n        const res = await fetch(global.defistationApiUrl + chartFullUrl2, {\n            method: 'GET',\n            headers: {\n                Authorization: global.auth\n            }\n        });\n        res\n            .json()\n            .then(res => {\n                // console.log(\"res: \", res);\n\n                // data={[\n                //     ['x', 'TVL(USD)'],\n                //     [\"Jan\", 1400],\n                //     [\"Feb\", 1300],\n                //     [\"Mar\", 3510],\n                //     [\"Apr\", 1070],\n                //     [\"May\", 2480],\n                //     [\"Jun\", 5140],\n                //     [\"Jul\", 5520],\n                //     [\"Aug\", 8830],\n                // ]}\n                // let tempChartData = [['x', 'TVL(USD)']];\n\n                // ------------ 메인 페이지 TVL ------------\n                let tempChartData = [];\n                let initProjectTvlIndex = -1;\n\n                if (res.result == null) {\n                    setMinTvl(0);\n                    global.changeTotalValueLockedUsd(\"$ 0\");\n                    return;\n                }\n\n                // res.result 를 배열로 바꾸기 \n                let resultObj = res.result;\n                var resultArr = Object.keys(resultObj).map((key) => [Number(key), resultObj[key]]);\n\n                // console.log(\"[0604 TEST] resultArr: \", resultArr);\n\n                // chartPeriod 가 7, 30, 90 에 따라서 배열에 해당 최신 개수만 남겨두기\n                // if (chartPeriod == 7 || chartPeriod == 30) {\n                    // resultArr.splice(0, resultArr.length - chartPeriod);\n                    // resultArr.splice(resultArr.length - chartPeriod, resultArr.length - 1);\n                // }\n\n                let digitForTx;\n                let currencyUnitForTx;\n                let tempCurrencyFullNameForTx;\n                let sumTokenPrice = 0;\n\n                // ------------ 메인 페이지 TXs ------------\n                if (defiName == \"DeFi\") {\n                    // setChartLegendLabel(<div className=\"tvlChartLegendBox\"><div className=\"circleYellow\"></div><div>TVL</div> <div className=\"circleGray\">⦁</div><div>Transactions</div></div>);\n                    setChartLegendLabel(<ul className=\"tvlChartLegendBoxUl\">\n                                                <li><div className=\"circleYellow\"></div></li>\n                                                <li><div className=\"tvlChartLegendLabel\">TVL</div></li>\n                                                <li><div className=\"circleGray\"></div></li>\n                                                <li>Transactions</li>\n                                            </ul>);\n\n                    let dailyTxObj = res.dailyTx;\n                    var dailyTxArr = Object.keys(dailyTxObj).map((key) => [Number(key), dailyTxObj[key]]);\n\n                    // console.log(\"dailyTxArr: \", dailyTxArr);\n\n                    // 최신 TXs 값 구하기. 최신 TXs 변화 % 계산하기\n                    let latestTxVal = 0;\n                    let latestTxChange = 0;\n                    for (var j = 0; j < dailyTxArr.length; j++) {\n                        if (j > 0) {\n                            if (dailyTxArr[j][1] > 0) latestTxVal = dailyTxArr[j][1];\n                            if (dailyTxArr[j - 1][1] > 0 && dailyTxArr[j][1] > 0) latestTxChange = (dailyTxArr[j][1] - dailyTxArr[j - 1][1]) / dailyTxArr[j][1] * 100;\n                        }\n                    }\n                    \n                    // console.log(\"latestTxVal: \", latestTxVal);\n                    // console.log(\"latestTxChange: \", latestTxChange.toFixed(2));\n\n                    global.changeTransactions24h(numberWithCommas(latestTxVal));\n                    global.changeTransactions24hPercent(latestTxChange.toFixed(2));\n\n                    // DualY 단위 계산\n                    // TXs \n                    // dailyTxArr 에서 가장 마지막 값을 기준으로 단위 만들기\n                    // Billion! dailyTxArr[i][1]\n                    // let digitForTx;\n                    // let currencyUnitForTx;\n                    // let tempCurrencyFullNameForTx;\n                    // console.log(\"[0428] 테스트 111111: \", latestTxVal);\n\n                    // 메인 페이지\n                    digitForTx = getCurrencyDigit(latestTxVal);\n                    currencyUnitForTx = getCurrencyUnit(latestTxVal);\n                    tempCurrencyFullNameForTx = getCurrencyUnitFullName(latestTxVal);\n                    setTxsUnitForDualY(tempCurrencyFullNameForTx);\n\n                    // console.log(\"[0428] digitForTx: \", digitForTx);\n                    // console.log(\"[0428] currencyUnitForTx: \", currencyUnitForTx);\n                    // console.log(\"[0428] tempCurrencyFullNameForTx: \", tempCurrencyFullNameForTx);\n\n\n                } else {\n                    // 서브 페이지\n                    let index = findDefiIndexNum(defiName);\n                    let tokenSymbolName = (defistationApplicationList[index][\"Ticker\"]).toUpperCase();\n\n                    setTvlChartCardTitleValue(\"TVL & \" + \"Token\" + \" Price\");\n\n                    // token price\n                    let priceObj = res.price;\n                    var priceArr = Object.keys(priceObj).map((key) => [Number(key), priceObj[key]]);\n\n                    for (var i = 0; i < priceArr.length; i++) {\n                        sumTokenPrice += priceArr[i][1];\n                    }\n\n                    if (priceArr.length > 0 && sumTokenPrice > 0) {\n                        // setChartLegendLabel(<><span className=\"circleYellow\">⦁</span> TVL <span className=\"circleGreen\">⦁</span> {tokenSymbolName} Price</>);\n                        setChartLegendLabel(<ul className=\"tvlChartLegendBoxUl\">\n                                                <li><div className=\"circleYellow\"></div></li>\n                                                <li><div className=\"tvlChartLegendLabel\">TVL</div></li>\n                                                <li><div className=\"circleGreen\"></div></li>\n                                                <li className=\"noWrap\">{tokenSymbolName} Price</li>\n                                            </ul>);\n                    } else {\n                        // defi 프로젝트에 토큰 가격이 없는 경우\n                        // setChartLegendLabel(<><span className=\"circleYellow\">⦁</span> TVL</>);\n                        setChartLegendLabel(<ul className=\"tvlChartLegendBoxUl\">\n                                                <li><div className=\"circleYellow\"></div></li>\n                                                <li><div className=\"tvlChartLegendLabel\">TVL</div></li>\n                                            </ul>);\n                    }\n                }\n\n                // console.log(\"dailyTxArr: \", dailyTxArr);\n\n                let initTimestamp = 0;\n                let tempMinTvl;\n\n                // K, M, B 기준은 최초 0번째 데이터(단, 0번째가 0이 아닐때)\n                // let digit = getCurrencyDigit(resultArr[0][1]);\n                // let currencyUnit = getCurrencyUnit(resultArr[0][1]);\n                // let tempCurrencyFullName = getCurrencyUnitFullName(resultArr[0][1]);\n                let digit;\n                let currencyUnit;\n                let tempCurrencyFullName;\n                // if (resultArr[0][1] > 0) {\n                //     digit = getCurrencyDigit(resultArr[0][1]);\n                //     currencyUnit = getCurrencyUnit(resultArr[0][1]);\n                //     tempCurrencyFullName = getCurrencyUnitFullName(resultArr[0][1]);\n                // } else {\n                //     digit = getCurrencyDigit(resultArr[resultArr.length - 1][1]);\n                //     currencyUnit = getCurrencyUnit(resultArr[resultArr.length - 1][1]);\n                //     tempCurrencyFullName = getCurrencyUnitFullName(resultArr[resultArr.length - 1][1]);\n                // }\n                // Billion!\n                digit = getCurrencyDigit(resultArr[resultArr.length - 1][1]);\n                currencyUnit = getCurrencyUnit(resultArr[resultArr.length - 1][1]);\n                tempCurrencyFullName = getCurrencyUnitFullName(resultArr[resultArr.length - 1][1]);\n                setCurrencyFullName(tempCurrencyFullName);\n\n                // 차트에 TVL B, M, K 단위 기입\n                if (defiName == \"DeFi\") {\n                    setChartData(['x', 'TVL(' + currencyFullName + ')', 'Transactions']);\n                } else {\n                    setChartData(['x', 'TVL(' + currencyFullName + ')', 'Token Price(USD)']);\n                }\n\n                // console.log(\"resultArr.length: \", resultArr.length);\n                let subChartStartingCorrectionFlag = false;\n                let prevCurrencyNum = 0;\n                let nextCurrencyNum = 0;\n                let prevTokenPrice = 0;\n                let nextTokenPrice = 0;\n\n                for (var i = 0; i < resultArr.length; i++) {\n                    if (i == 0) {\n                        initTimestamp = resultArr[i][0];\n                    }\n\n                    // console.log(\"resultArr[i][0]: \", resultArr[i][0]);\n                    // console.log(\"resultArr[i][1]: \", resultArr[i][1]);\n\n                    // let digit = getCurrencyDigit(resultArr[i][1]);\n                    // console.log(\"digit: \", digit);\n\n                    let currencyNum = (resultArr[i][1] / digit).toFixed(3) * 1;\n\n                    // console.log(\"currencyNum: \", currencyNum);\n\n                    if (i == 0) {\n                        // tempMinTvl = currencyNum;\n                        if (currencyNum > 0) {\n                            tempMinTvl = currencyNum;\n                        }\n                    } else {\n                        // 가장 작은 값 찾기(vAxis 최솟값)\n                        if (tempMinTvl > currencyNum) {\n                            // tempMinTvl = currencyNum;\n                            if (currencyNum > 0) {\n                                tempMinTvl = currencyNum;\n                            }\n                        }\n                    }\n\n                    // console.log(\"tempMinTvl: \", tempMinTvl);\n\n                    // 이전 연속 2개의 값이 0이 아니라면 직전 값으로 보정한다. (미싱 데이터 보정)\n                    if (currencyNum == 0) {\n                        // 이전 2개의 값이 0인가?\n                        if (i > 2) {\n                            let prevCurrentNum1 = (resultArr[i - 1][1] / digit).toFixed(3) * 1;\n                            let prevCurrentNum2 = (resultArr[i - 2][1] / digit).toFixed(3) * 1;\n\n                            // if (prevCurrentNum1 > 0 && prevCurrentNum2 > 0) {\n                            //     currencyNum = prevCurrentNum1;\n                            // }\n                            if (prevCurrentNum1 > 0) {\n                                currencyNum = prevCurrentNum1;\n                            } else if (prevCurrentNum2 > 0) {\n                                currencyNum = prevCurrentNum2;\n                            }\n                        }\n                    }\n\n                    // 신규 프로젝트인 경우 7d, 30d 일 때 앞에 tvl 값이 0이 연속으로 오는 경우 해당 배열 요소 제거\n                    // tempChartData[0][1] 이 0인가?\n                    // 연속으로 0인가? -> 차트 추가 안함\n                    if (i == 0) {\n                        if (currencyNum == 0) {\n                            initProjectTvlIndex = 0;\n                        }\n                    }\n\n                    if (initProjectTvlIndex > -1) {\n                        if (currencyNum == 0) {\n                            initProjectTvlIndex = i;\n                        } else {\n                            initProjectTvlIndex = -1;\n                        }\n                    }\n                    \n                    // dailyTxArr\n                    if (initProjectTvlIndex == -1) {\n                        if (defiName == \"DeFi\") {\n                            // 메인 페이지\n                            let tempDailyTx = dailyTxArr[i][1] / digitForTx;\n                            if (tempDailyTx == 0) {\n                                tempDailyTx = null;\n                            }\n\n                            // tempChartData.push([getMonthAndDay(new Date(resultArr[i][0] * 1000)), currencyNum, tempDailyTx]);\n                            if (i == resultArr.length - 1) {\n                                // 마지막에는 최신 TX 한번 더 넣기\n                                tempChartData.push([getMonthAndDay(new Date(resultArr[i][0] * 1000)), currencyNum, dailyTxArr[i - 1][1] / digitForTx]);\n                            } else {\n                                tempChartData.push([getMonthAndDay(new Date(resultArr[i][0] * 1000)), currencyNum, tempDailyTx]);\n                            }\n                            \n                        } else {\n                            // console.log(\"[0416] 테스트3333333\");\n                            // 서브 페이지\n                            let tempPrice = null;\n                            // let prevPrice = null;\n                            // console.log(\"[0416] priceArr: \", priceArr);\n                            if (priceArr.length > 0 && sumTokenPrice > 0) {\n                                tempPrice = priceArr[i][1];\n                                // tempChartData.push([getMonthAndDay(new Date(resultArr[i][0] * 1000)), currencyNum, tempPrice]);\n\n                                // 중간에 tvl, token price 에 0이 들어있는 경우 보정\n                                // ((이전 값) + (0이 아닌 다음 값)) / 2\n\n                                if (defiName == \"pancake\") {\n                                    console.log(\"pancake 예외처리\");\n                                    // --------------- tvl 보정 평균값 계산 START ---------------\n                                    let calCurrencyNum = 0;\n                                    if (currencyNum == 0) {\n                                        // 다음 0 이 아닌값 임시 조회\n                                        for (var j = i; j < resultArr.length; j++) {\n                                            nextCurrencyNum = (resultArr[j][1] / digit).toFixed(3) * 1;\n                                            if (nextCurrencyNum > 0) break;\n                                        }\n                                        calCurrencyNum = (prevCurrencyNum + nextCurrencyNum) / 2;\n                                    } else {\n                                        calCurrencyNum = currencyNum;\n                                    }\n                                    // --------------- tvl 보정 평균값 계산 END ---------------\n\n                                    // --------------- token price 보정 평균값 계산 START ---------------\n                                    let calTokenPrice = 0;\n                                    if (tempPrice == 0) {\n                                        // 다음 0 이 아닌값 임시 조회\n                                        for (var j = i; j < resultArr.length; j++) {\n                                            nextTokenPrice = priceArr[j][1];\n                                            if (nextTokenPrice > 0) break;\n                                        }\n                                        calTokenPrice = (prevTokenPrice + nextTokenPrice) / 2;\n                                    } else {\n                                        calTokenPrice = tempPrice;\n                                    }\n                                    // --------------- token price 보정 평균값 계산 END ---------------\n\n                                    tempChartData.push([getMonthAndDay(new Date(resultArr[i][0] * 1000)), calCurrencyNum, calTokenPrice]);\n                                    if (currencyNum > 0) prevCurrencyNum = currencyNum;  // 차트 보정용\n                                    if (tempPrice > 0) prevTokenPrice = tempPrice;  // 차트 보정용\n                                } else {\n                                    if ((currencyNum > 0 && tempPrice > 0) || subChartStartingCorrectionFlag) {\n                                        // --------------- tvl 보정 평균값 계산 START ---------------\n                                        let calCurrencyNum = 0;\n                                        if (currencyNum == 0) {\n                                            // 다음 0 이 아닌값 임시 조회\n                                            for (var j = i; j < resultArr.length; j++) {\n                                                nextCurrencyNum = (resultArr[j][1] / digit).toFixed(3) * 1;\n                                                if (nextCurrencyNum > 0) break;\n                                            }\n                                            calCurrencyNum = (prevCurrencyNum + nextCurrencyNum) / 2;\n                                        } else {\n                                            calCurrencyNum = currencyNum;\n                                        }\n                                        // --------------- tvl 보정 평균값 계산 END ---------------\n\n                                        // --------------- token price 보정 평균값 계산 START ---------------\n                                        let calTokenPrice = 0;\n                                        if (tempPrice == 0) {\n                                            // 다음 0 이 아닌값 임시 조회\n                                            for (var j = i; j < resultArr.length; j++) {\n                                                nextTokenPrice = priceArr[j][1];\n                                                if (nextTokenPrice > 0) break;\n                                            }\n                                            calTokenPrice = (prevTokenPrice + nextTokenPrice) / 2;\n                                        } else {\n                                            calTokenPrice = tempPrice;\n                                        }\n                                        // --------------- token price 보정 평균값 계산 END ---------------\n                                        tempChartData.push([getMonthAndDay(new Date(resultArr[i][0] * 1000)), calCurrencyNum, calTokenPrice]);\n                                        if (currencyNum > 0) prevCurrencyNum = currencyNum;  // 차트 보정용\n                                        if (tempPrice > 0) prevTokenPrice = tempPrice;  // 차트 보정용\n\n                                        subChartStartingCorrectionFlag = true;\n                                    }\n                                }\n                                \n                            } else {\n                                tempChartData.push([getMonthAndDay(new Date(resultArr[i][0] * 1000)), currencyNum]);\n                            }\n\n                            // <span className=\"circleGray\">⦁</span> TXs in BSC\n                            // setChartLegendLabel(<><span className=\"circleYellow\">⦁</span> TVL <span className=\"circleGray\">⦁</span> TXs in BSC</>);\n                        }\n                    } else {\n                        if (defiName == \"DeFi\") {\n                            // 메인 페이지\n                            tempChartData.push([getMonthAndDay(new Date(resultArr[i][0] * 1000)), null, null]);\n                        } else {\n                            // 서브 페이지\n                            // tempChartData.push([getMonthAndDay(new Date(resultArr[i][0] * 1000)), null]);\n                        }\n                    }\n                    \n                    if (i == resultArr.length - 1) {\n                        setTotalValueLockedUsd(currencyNum + \" \" + currencyUnit);\n                        // global.changeTotalValueLockedUsd(\"$ \" + currencyNum + \" \" + currencyUnit);\n                        global.changeTotalValueLockedUsd(\"$ \" + numberWithCommas(resultArr[i][1]));\n                    }\n                }\n\n                // 차트: 7d, 30d\n                if (tempChartData.length > chartPeriod) {\n                    let remainDataLength = tempChartData.length - chartPeriod;\n                    for (var i = 0; i < remainDataLength; i++) {\n                        tempChartData.shift();  // 맨 앞 원소 제거\n                    }\n                }\n\n                tempMinTvl = Math.floor(tempMinTvl * 0.9);\n                \n                // 차트 최솟값 설정(차트 모양 예쁘게 하기 위함)\n                setMinTvl(tempMinTvl);\n\n                // 차트 데이터 적용\n                if (defiName == \"DeFi\") {\n                    // 메인 페이지\n                    // tempChartData.unshift(['x', 'TVL(USD)', 'Transactions']);\n                    tempChartData.unshift(['x', 'TVL(' + tempCurrencyFullName + ')', 'Transactions(' + tempCurrencyFullNameForTx + ')']);\n                } else {\n                    // 서브 페이지\n                    if (priceArr.length > 0 && sumTokenPrice > 0) {\n                        tempChartData.unshift(['x', 'TVL(' + tempCurrencyFullName + ')', 'Token Price(USD)']);\n                    } else {\n                        tempChartData.unshift(['x', 'TVL(' + tempCurrencyFullName + ')']);\n                    }\n                }\n                setChartData(tempChartData);\n\n                // tempChartData\n                // tvl과 token price 한 쌍의 데이터에서 둘중 하나가 0인 경우 해당 쌍을 제거\n                // 서브페이지의 tempChartData[0]: \"x\", \"TVL(Billion)\", \"Token Price(USD)\"\n                console.log(\"[0708] tempChartData: \", tempChartData);\n                \n\n\n\n\n\n\n                // TVL 1 DAY(%)\n                // resultArr 가 2개 이상 요소를 가지고 있어야함. 그리고 가장 마지막과 그 이전의 % 차이를 계산하면 됨\n                if (resultArr.length >= 2) {\n                    let latestTvl = resultArr[resultArr.length - 1][1];\n                    let pastTvl = resultArr[resultArr.length - 2][1];\n\n                    // console.log(\"latestTvl: \", latestTvl);\n                    // console.log(\"pastTvl: \", pastTvl);\n                    // console.log(\"((1 - pastTvl / latestTvl) * 100).toFixed(2) * 1: \", ((1 - pastTvl / latestTvl) * 100).toFixed(2) * 1);\n\n                    let resultTvl1DayPercent = ((1 - pastTvl / latestTvl) * 100).toFixed(2) * 1;\n                    if (!isNaN(resultTvl1DayPercent)) {\n                        // 숫자인 경우에만\n                        global.changeTvl1DayPercent(resultTvl1DayPercent);\n                    } else {\n                        global.changeTvl1DayPercent(0);\n                    }\n\n                    // 숫자가 이상한 경우 (2020.12.7 09:00 PM)\n                    if (resultTvl1DayPercent > 1000) {\n                        global.changeTvl1DayPercent(0);\n                    }\n                } else {\n                    // 계산할 값이 없으면 0\n                    global.changeTvl1DayPercent(0);\n                }\n\n                // 홈 하단 1 Day Change 계산\n                console.log(\"res.details: \", res.details);  // undefined\n                let resultDetailsObj = res.details;\n                global.changeChartDataDetails(resultDetailsObj);\n            })\n            .catch(err => setResponseError(err));\n    }\n\n    function movePage(path) {\n        history.push(path);\n    }\n\n    function openWindow(path) {\n        window.open(path);\n    }\n\n    function findDefiIndexNum(defiName) {\n        // 예외처리\n        if (defiName == \"pancake\") {\n            defiName = \"PancakeSwap\";\n        } else if (defiName == \"Stakecow\") {\n            defiName = \"Milk Protocol\";\n        }\n        \n        let index = 0;\n        for (var i = 0; i < defistationApplicationList.length; i++) {\n            if (defistationApplicationList[i][\"Official Project Name\"] == defiName) {\n                index = i;\n                break;\n            }\n        }\n        return index;\n    }\n\n    function findLogoUrl(defiName) {\n        // defistationApplicationList 에서 Official Project Name 이 defiName와 일치하는 것 찾기\n\n        // 예외처리\n        if (defiName == \"pancake\") {\n            defiName = \"PancakeSwap\";\n        } else if (defiName == \"Stakecow\") {\n            defiName = \"Milk Protocol\";\n        }\n        \n        let logoUrl = \"\";\n        for (var i = 0; i < defistationApplicationList.length; i++) {\n            if (defistationApplicationList[i][\"Official Project Name\"] == defiName) {\n                logoUrl = defistationApplicationList[i][\"Project Logo URL (68px*68px png ONLY. Given link should directly DISPLAY Logo image without any BACKGROUND. Google drive link is NOT accepted.)\"];\n                break;\n            }\n        }\n        return logoUrl;\n    }\n\n    function selectOfficialLink(defiName) {\n        switch (defiName) {\n            // case \"pancake\":\n            //     setDefiIcon(pancake);\n            //     break;\n            case \"Peach Swap\":\n                setDefiIcon(peachswap);\n                break;   \n            case \"Streamity\":\n                setDefiIcon(streamity);\n                break;   \n            case \"bscSwap\":\n                setDefiIcon(bscswap);\n                break;   \n            case \"Spartan Protocol\":\n                setDefiIcon(spartanprotocol);\n                break;   \n            case \"Burger Swap\":\n                setDefiIcon(burgerswap);\n                break;   \n            case \"Stakecow\":\n                setDefiIcon(stakecow);\n                break;   \n            case \"Alpha Finance\":\n                setDefiIcon(alphafinance);\n                break;   \n            case \"Cream Finance\":\n                setDefiIcon(creamfinance);\n                break;   \n            case \"Bakery Swap\":\n                setDefiIcon(bakeryswap);\n                break;   \n            case \"ForTube\":\n                setDefiIcon(fortube);\n                break;   \n            case \"FryWorld\":\n                setDefiIcon(fryworld);\n                break;   \n            case \"beefy.finance\":\n                setDefiIcon(beefyfinance);\n                break;\n            case \"Narwhalswap\":\n                setDefiIcon(narwhalswap);\n                break;   \n            case \"STORMSWAP\":\n                setDefiIcon(stormswap);\n                break;       \n            case \"BnEX\":\n                setDefiIcon(bnexchange);\n                break;\n            case \"7up.finance\":\n                setDefiIcon(sevenupfinance);\n                break;\n            case \"BFis.finance\":\n                setDefiIcon(bfisfinance);\n                break;\n            case \"bStable.finance\":\n                setDefiIcon(bstablefinance);\n                break;\n            case \"Dego\":\n                setDefiIcon(dego);\n                break;\n            case \"Equator.finance\":\n                setDefiIcon(equatorfinance);\n                break;\n            case \"StableXSwap\":\n                setDefiIcon(stablexswap);\n                break;\n            case \"QIAN\":\n                setDefiIcon(qian);\n                break;    \n            case \"PancakeBunny\":\n                setDefiIcon(pancakebunny);\n                break;\n            case \"JulSwap\":\n                setDefiIcon(julswap);\n                break;\n            case \"JustLiquidity\":\n                setDefiIcon(justliquidity);\n                break;\n            case \"AnySwap\":\n                setDefiIcon(anyswap);\n                break;\n            case \"CokeFinance\":\n                setDefiIcon(cokefinance);\n                break;\n            case \"renVM\":\n                setDefiIcon(renvm);\n                break;\n            case \"UniFi\":\n                setDefiIcon(unifiprotocol);\n                break;\n            case \"Venus\":\n                setDefiIcon(venus);\n                break;   \n            case \"Thugs\":\n                setDefiIcon(thugs);\n                break; \n            case \"CBerry\":\n                setDefiIcon(cberry);\n                break; \n            case \"Jetfuel.Finance\":\n                setDefiIcon(jetfuel);\n                break;  \n            case \"ACryptoS\":\n                setDefiIcon(acryptos);\n                break; \n            case \"BSC Farm\":\n                setDefiIcon(bscfarm);\n                break;   \n            case \"bDollar Protocol\":\n                setDefiIcon(bdollar);\n                break;   \n            case \"Autofarm\":\n                setDefiIcon(autofarm);\n                break;   \n            case \"Binance Agile Set Dollar\":\n                setDefiIcon(basddollar);\n                break;\n            case \"Kebab Finance\":\n                setDefiIcon(kebab);\n                break;\n            case \"KEEP3R BSC NETWORK\":\n                setDefiIcon(KEEP3RBSC);\n                break;\n            case \"CheeseSwap\":\n                setDefiIcon(CheeseSwap);\n                break;\n            case \"Midas Dollar\":\n                setDefiIcon(MidasDollar);\n                break;\n            case \"CrowFinance\":\n                setDefiIcon(CrowFinance);\n                break;\n            case \"Goose Finance\":\n                setDefiIcon(goosefinance);\n                break;\n            case \"BSCex\":\n                setDefiIcon(bscex);\n                break;\n            case \"Linear Finance\":\n                setDefiIcon(LinearFinance);\n                break;\n            case \"Deri Protocol\":\n                setDefiIcon(derifinance);\n                break;\n            case \"Belt Finance\":\n                setDefiIcon(beltfinance);\n                break;\n            case \"BiFi\":\n                setDefiIcon(bifi);\n                break;\n            case \"Multi-Chain Lend (MCL)\":\n                setDefiIcon(multiplier);    \n                break;    \n            case \"BlackHoleSwap\":\n                setDefiIcon(blackholeswap);    \n                break;\n            case \"Pika Finance\":\n                setDefiIcon(pikafinance);    \n                break;  \n            case \"Bscrunner\":\n                setDefiIcon(bscrunner);    \n                break;    \n            case \"Ellipsis Finance\":\n                setDefiIcon(ellipsisfinance);    \n                break;\n            case \"DODO\":\n                setDefiIcon(dodo);\n                break;\n            case \"Demex\":\n                setDefiIcon(demex);\n                break;\n            case \"Helmet\":\n                setDefiIcon(helmet);\n                break;  \n            case \"ARIES FINANCIAL\":\n                setDefiIcon(ariesfinancial);\n                break; \n            case \"Alpha Homora\":\n                setDefiIcon(alphahomora);\n                break;    \n            case \"Cobalt.finance\":\n                setDefiIcon(cobaltfinance);\n                break;\n            case \"SwampFinance\":\n                setDefiIcon(swampfinance);\n                break;\n            case \"Nominex\":\n                setDefiIcon(nominex);\n                break;\n            case \"Wault.Finance\":\n                setDefiIcon(waultfinance);\n                break;    \n            case \"WePiggy\":\n                setDefiIcon(wepiggy);\n                break;\n            case \"Rabbit Finance\":\n                setDefiIcon(rabbitfinance);\n                break;\n            case \"Biswap\":\n                setDefiIcon(biswap);\n                break;   \n            case \"InsurAce Protocol\":\n                setDefiIcon(insuraceprotocol);\n                break; \n            case \"TEN\":\n                setDefiIcon(ten);\n                break;\n            case \"MDEX\":\n                setDefiIcon(mdex);\n                break;\n            case \"Pumpy\":\n                setDefiIcon(pumpy);\n                break;\n            case \"dForce\":\n                setDefiIcon(dforce);\n                break;                 \n            default:\n                let logoUrl = findLogoUrl(defiName);\n\n                console.log(\"logoUrl: \", logoUrl);\n\n                if (logoUrl != \"\") {\n                    setDefiIcon(logoUrl);\n                } else {\n                    setLinkTag(\"\");\n                }\n                break;    \n        }\n\n        {/* pancake */}\n        // <div className=\"defiDetailPageLink noDrag\" style={props.defiName == \"pancake\" ? undefined : { display: \"none\" } }>\n        //     <div className=\"subPageDefiLinkBox\" onClick={() => openWindow(\"https://pancakeswap.finance/\")}><img src={defiOfficialSiteIcon} /><span className=\"subPageDefiLinkBoxTitle\">Official Website</span></div>\n        //     <div className=\"subPageDefiLinkBox\" onClick={() => openWindow(\"https://github.com/pancakeswap\")}><img src={defiGithubIcon} /><span className=\"subPageDefiLinkBoxTitle\">Github</span></div>\n        //     <div className=\"subPageDefiLinkBox\" onClick={() => openWindow(\"https://docs.pancakeswap.finance/\")} style={{\"clear\": \"both\"}}><img src={defiDocsIcon} /><span className=\"subPageDefiLinkBoxTitle\">Docs</span></div>\n        //     <div className=\"subPageDefiLinkBox\" onClick={() => openWindow(\"https://twitter.com/pancakeswap\")}><img src={defiTwitterIcon} /><span className=\"subPageDefiLinkBoxTitle\">Twitter</span></div>\n        //     <div className=\"subPageDefiLinkBox\" onClick={() => openWindow(\"https://t.me/PancakeSwap\")}><img src={defiTelegramIcon} /><span className=\"subPageDefiLinkBoxTitle\">Telegram</span></div>\n        //     <div className=\"subPageDefiLinkBox\" onClick={() => openWindow(\"https://medium.com/@pancakeswap\")}><img src={defiBlogIcon} /><span className=\"subPageDefiLinkBoxTitle\">Blog</span></div>\n        // </div>\n\n        // defistationApplicationList.json 에서 i 번째... i가 뭔지 찾기\n\n        let index = findDefiIndexNum(defiName);\n\n        console.log(\"[0524] test github: \", defistationApplicationList[index][\"Github URL\"]);\n\n        setProjectBtnLink(\n            <div className=\"defiDetailPageLink noDrag\">\n                {\n                    (defistationApplicationList[index][\"Project Official Website (URL)\"]).indexOf(\"http\") != -1\n                    ? <div className=\"subPageDefiLinkBox\" onClick={() => openWindow(defistationApplicationList[index][\"Project Official Website (URL)\"])}><img src={defiOfficialSiteIcon} /><span className=\"subPageDefiLinkBoxTitle\">Official Website</span></div>\n                    : <div className=\"subPageDefiLinkBox disableBtn\"><img src={defiOfficialSiteIcon} /><span className=\"subPageDefiLinkBoxTitle\">Official Website</span></div>\n                }\n                {\n                    // defistationApplicationList[index][\"Github URL\"] != \"\"\n                    (defistationApplicationList[index][\"Github URL\"]).indexOf(\"http\") != -1\n                    ? <div className=\"subPageDefiLinkBox\" onClick={() => openWindow(defistationApplicationList[index][\"Github URL\"])}><img src={defiGithubIcon} /><span className=\"subPageDefiLinkBoxTitle\">Github</span></div>\n                    : <div className=\"subPageDefiLinkBox disableBtn\"><img src={defiGithubIcon} /><span className=\"subPageDefiLinkBoxTitle\">Github</span></div>\n                }\n                {\n                    // defistationApplicationList[index][\"Developer Docs URL\"] != \"\"\n                    (defistationApplicationList[index][\"Developer Docs URL\"]).indexOf(\"http\") != -1\n                    ? <div className=\"subPageDefiLinkBox\" onClick={() => openWindow(defistationApplicationList[index][\"Developer Docs URL\"])}><img src={defiDocsIcon} /><span className=\"subPageDefiLinkBoxTitle\">Docs</span></div>\n                    : <div className=\"subPageDefiLinkBox disableBtn\"><img src={defiDocsIcon} /><span className=\"subPageDefiLinkBoxTitle\">Docs</span></div>\n                }\n                {\n                    // defistationApplicationList[index][\"Twitter URL\"] != \"\"\n                    (defistationApplicationList[index][\"Twitter URL\"]).indexOf(\"http\") != -1\n                    ? <div className=\"subPageDefiLinkBox\" onClick={() => openWindow(defistationApplicationList[index][\"Twitter URL\"])}><img src={defiTwitterIcon} /><span className=\"subPageDefiLinkBoxTitle\">Twitter</span></div>\n                    : <div className=\"subPageDefiLinkBox disableBtn\"><img src={defiTwitterIcon} /><span className=\"subPageDefiLinkBoxTitle\">Twitter</span></div>\n                }\n                {\n                    // defistationApplicationList[index][\"Telegram(EN) URL\"] != \"\"\n                    (defistationApplicationList[index][\"Telegram(EN) URL\"]).indexOf(\"http\") != -1\n                    ? <div className=\"subPageDefiLinkBox\" onClick={() => openWindow(defistationApplicationList[index][\"Telegram(EN) URL\"])}><img src={defiTelegramIcon} /><span className=\"subPageDefiLinkBoxTitle\">Telegram</span></div>\n                    : <div className=\"subPageDefiLinkBox disableBtn\"><img src={defiTelegramIcon} /><span className=\"subPageDefiLinkBoxTitle\">Telegram</span></div>\n                }\n                {\n                    // defistationApplicationList[index][\"Medium Blog URL\"] != \"\"\n                    (defistationApplicationList[index][\"Medium Blog URL\"]).indexOf(\"http\") != -1\n                    ? <div className=\"subPageDefiLinkBox\" onClick={() => openWindow(defistationApplicationList[index][\"Medium Blog URL\"])}><img src={defiBlogIcon} /><span className=\"subPageDefiLinkBoxTitle\">Blog</span></div>\n                    : <div className=\"subPageDefiLinkBox disableBtn\"><img src={defiBlogIcon} /><span className=\"subPageDefiLinkBoxTitle\">Blog</span></div>\n                }\n            </div>\n        );\n    }\n\n    // ------------ 모바일 구글 차트를 위한 resize 체크 START ------------\n    // function resizeChart() {\n    //     chart.draw(ChartData, options);\n    // }\n\n    function resizedw(){\n        // Haven't resized in 100ms!\n\n        console.log(\"[0427] window.innerWidth: \", window.innerWidth);\n        console.log(\"[0427] screen.width: \", screen.width);\n\n        if (isMobile) {\n            if (screen.width <= 320) {\n                if (viewWidth != \"86vw\") {\n                    setViewWidth(\"89vw\");\n                    setChartWidth(\"85%\");\n                }\n            } else if (screen.width <= 1034) {\n                console.log(\"1034 이하\");\n                if (viewWidth != \"91vw\") {\n                    window.location.replace(location.pathname);\n                }\n            } else {\n                console.log(\"1034 초과\");\n                if (viewWidth != \"750px\") {\n                    window.location.replace(location.pathname);\n                }\n            }\n        } else {\n            if (window.innerWidth <= 320) {\n                if (viewWidth != \"86vw\") {\n                    setViewWidth(\"89vw\");\n                    setChartWidth(\"85%\");\n                }\n            } else if (window.innerWidth <= 1034) {\n                console.log(\"1034 이하\");\n                if (viewWidth != \"91vw\") {\n                    window.location.replace(location.pathname);\n                }\n            } else {\n                console.log(\"1034 초과\");\n                if (viewWidth != \"750px\") {\n                    window.location.replace(location.pathname);\n                }\n            }\n        }\n    }\n    \n    var doit;\n    function checkWindowWidth() {\n        // var doit;\n        var width = window.innerWidth;\n        // var height = window.innerHeight;\n\n        window.onresize = function(){\n            clearTimeout(doit);\n            // doit = setTimeout(resizedw, 100);\n\n            // if (window.innerWidth != width) {\n            //     //Do something\n            //     doit = setTimeout(resizedw, 100);\n            // }\n\n            // if ($(window).width() != width || $(window).height() != height) {\n            //     //Do something\n            // }\n\n            if (window.innerWidth != width) {\n                clearTimeout(doit);\n                doit = setTimeout(resizedw, 100);\n            }\n        };\n    }\n\n    // function checkWindowWidth() {\n    //     if (window.matchMedia(\"(max-width: 1035px)\").matches) {\n    //         /* the viewport is less than or exactly 500 pixels wide */\n    //         console.log(\"1034 이하\");\n    //         // 홈 화면인 경우\n    //         window.location.replace(location.pathname);\n\n    //     } else {\n    //         /* the viewport is more than 500 pixels wide */\n    //         console.log(\"1034 초과\");\n    //         // 홈 화면인 경우\n    //         window.location.replace(location.pathname);\n    //     }\n    // }\n    // ------------ 모바일 구글 차트를 위한 resize 체크 END ------------\n\n    var isMobile = false;\n\n    const [sponsoredVal, setSponsoredVal] = useState();\n\n    useEffect(() => {\n        // Sponsored\n        if (getSponsors().indexOf(props.defiName ) != -1) {\n            setSponsoredVal(<div className=\"sponsored\">Sponsored</div>);\n        }\n\n        getChart(props.defiName);\n\n        // 2) 414px ~ 1034px: 374px, 88%\n        // 3) 360px ~ 413px: 290px, 88%\n        // 4) 1px ~ 359px: 270px, 88%\n\n        // if (window.innerWidth >= 414 && window.innerWidth <= 1034) {\n        //     setViewWidth(\"374px\");\n        //     setChartWidth(\"88%\");\n        //     setTvlChartCardTitleValue(\"TVL\");\n        // } else if (window.innerWidth >= 360 && window.innerWidth < 414) {\n        //     setViewWidth(\"290px\");\n        //     setChartWidth(\"88%\");\n        //     setTvlChartCardTitleValue(\"TVL\");\n        // } else if (window.innerWidth >= 0 && window.innerWidth < 360) {\n        //     setViewWidth(\"270px\");\n        //     setChartWidth(\"88%\");\n        //     setTvlChartCardTitleValue(\"TVL\");\n        // }\n\n        // if (window.innerWidth <= 1034) {\n        //     setViewWidth(\"870px\");\n        //     setChartWidth(\"89%\");\n        // } else {\n        //     setViewWidth(\"750px\");\n        //     setChartWidth(\"89%\");\n        // }\n\n        console.log(\"screen.width: \", screen.width);\n\n        // 2) 1024px: 970px, 94%\n        // 3) 768px: 708px, 94%\n        // 4) 414px ~ 767px: 374px, 88%\n        // 5) 360px ~ 413px: 290px, 88%\n        // 6) 1px ~ 359px: 270px, 88%\n\n        // var isMobile = false; //initiate as false\n        // device detection\n        if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent) \n            || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(navigator.userAgent.substr(0,4))) { \n            isMobile = true;\n        }\n\n        setFakeControls([]);\n\n        if (isMobile) {\n            if (screen.width > 1034) {\n                console.log(\"1034 초과\");\n                setViewWidth(\"750px\");\n                setChartWidth(\"88%\");\n            } else if (screen.width <= 1034 && screen.width > 320) {\n                console.log(\"1034 이하\");\n                if (props.defiName == \"DeFi\") {\n                    // 메인 페이지\n                    setViewWidth(\"91vw\");\n                    setChartWidth(\"85%\");\n                } else {\n                    // 서브 페이지\n                    setViewWidth(\"89vw\");\n                    setChartWidth(\"85%\");\n                }\n            } else {\n                console.log(\"320 이하\");\n                setViewWidth(\"89vw\");\n                setChartWidth(\"85%\");\n            }\n        } else {\n            if (window.innerWidth > 1034) {\n                console.log(\"1034 초과\");\n                // if (props.defiName == \"DeFi\") {\n                //     setViewWidth(\"750px\");\n                // } else {\n                //     setViewWidth(\"750px\");\n                // }\n                setViewWidth(\"750px\");\n                setChartWidth(\"88%\");\n            } else if (window.innerWidth <= 1034 && window.innerWidth > 320) {\n                console.log(\"1034 이하\");\n                setViewWidth(\"91vw\");\n                setChartWidth(\"85%\");\n            } else {\n                console.log(\"320 이하\");\n                setViewWidth(\"89vw\");\n                setChartWidth(\"85%\");\n            }\n        }\n        \n        checkWindowWidth();\n\n        console.count(\"TotalValue render\");\n        console.log(\"props.defiName: \", props.defiName);\n\n        selectOfficialLink(props.defiName);\n\n        if (props.defiName == \"DeFi\") {\n            // 메인 페이지\n            setDualYUnitText(\"TXs\");\n        } else {\n            // 서브 페이지\n            setDualYUnitText(\"USD\");\n        }\n\n        return () => {\n            // console.log('cleanup');\n            // clearTimeout(timer);\n        };\n    }, [props.defiName, global.tvl1DayPercent, linkTag, viewWidth, chartPeriod])\n\n    return (\n        <div className=\"totalValue\">\n            {/* subpage 타이틀 */}\n            <div>\n                <ul className=\"tvlTitleBox\" style={props.defiName != \"DeFi\" ? undefined : {display: \"none\"}}>\n                    <li>\n                        <ul className=\"tvlSubPageTitleIconLabel\">\n                            <li><img src={defiIcon} onError={(e)=>{e.target.onerror = null; e.target.src=defaultIcon}} /></li>\n                            <li><div>{getOfficialDefiName(props.defiName)}</div></li>\n                            {/* <li><div className=\"sponsored\">Sponsored</div></li> */}\n                            <li>{sponsoredVal}</li>\n                        </ul>\n                    </li>\n                    <li>\n                        <div className=\"navBox noDrag\"><span className=\"navHome\" onClick={() => movePage(\"/\")}>DEFISTATION</span> &gt; <span className=\"navDefiName\">{props.defiName}</span></div>\n                    </li>\n                </ul>\n            </div>\n            \n            <ul className=\"totalValueUl\">\n                <li>\n                    {/* <div className=\"tvlChartCard\" style={props.defiName != \"DeFi\" ? {backgroundColor: \"#262932\"} : {backgroundColor: \"#262932\"}}> */}\n                    <div className=\"tvlChartCard\">\n                        <ul className=\"tvlChartCardUl\">\n                            <li>\n                                <p className=\"tvlChartLegend\">{chartLegendLabel}</p>\n\n                                {/* Total Value Locked in ... */}\n                                <p className=\"tvlChartCardTitle\">{tvlChartCardTitleValue} {getOfficialDefiName(props.defiName)}</p>\n                                <p className=\"tvlValueUsd\">$ {totalValueLockedUsd}</p>\n                                <p className=\"tvlChartUnitY\">({currencyFullName} USD)</p>\n                                <p className=\"tvlChartUnitYRight\" style={props.defiName != \"DeFi\" ? {display: \"none\"} : undefined}>({txsUnitForDualY} {dualYUnitText})</p>\n                                <p className=\"tvlChartUnitYRightOnSubPage\" style={props.defiName != \"DeFi\" ? undefined : {display: \"none\"}}>({dualYUnitText})</p>\n\n                                {/* Main Chart: dual Y 차트 */}\n                                <div style={props.defiName != \"DeFi\" ? {display: \"none\"} : undefined}>\n                                    <Chart\n                                    controls={fakeControls}\n                                    width={viewWidth}\n                                    height={'220px'}\n                                    id=\"tvlGoogleChart\"\n                                    style={ window.innerWidth < 441 ? {\"margin-left\":\"-7px\", \"margin-top\":\"28px\"} : {\"margin-left\":\"-7px\", \"margin-top\":\"0px\"} }\n                                    chartType=\"LineChart\"\n                                    loader={<div style={{ \"width\": viewWidth, \"height\": \"270px\", \"text-align\": \"center\", \"margin-top\": \"100px\" }}>< img src={loading} /></div>}\n                                    data={chartData}\n                                    options={{\n                                        backgroundColor: \"#fff\",\n                                        legend: \"none\",\n                                        // animation : { duration:400, easing:'out'},\n                                        // Gives each series an axis that matches the vAxes number below.\n                                        series: {\n                                            0: {targetAxisIndex: 0},\n                                            1: {targetAxisIndex: 1}\n                                        },\n                                        hAxis: {\n                                            textStyle: {\n                                                color: '#9d9fa4',\n                                                fontSize: 11,\n                                            },\n                                            slantedText: true,\n                                            baselineColor: '#efefef',\n                                            gridlineColor: '#efefef',\n                                        },\n                                        vAxis: {\n                                            // minValue: minTvl,\n                                            textStyle: {\n                                                color: '#9d9fa4',\n                                            },\n                                            baselineColor: '#efefef',\n                                            gridlineColor: '#efefef',\n                                        },\n                                        colors: [\"#FDCE32\", \"#888A8F\"],\n                                        chartArea: { width: chartWidth, height: '70%' },\n                                        focusTarget: 'category',\n                                        crosshair: {\n                                            orientation: 'vertical', \n                                            trigger: 'focus',\n                                            color: '#fff',\n                                            opacity: 0.1,\n                                        },\n                                        }}\n                                    rootProps={{ 'data-testid': '2' }}\n                                    />\n                                </div>\n                                {/* Subpage Chart */}\n                                <div style={props.defiName != \"DeFi\" ? undefined : {display: \"none\"}}>\n                                    <Chart\n                                    id=\"tvlGoogleChart\"\n                                    width={viewWidth}\n                                    height={'220px'}\n                                    style={ window.innerWidth < 441 ? {\"margin-left\":\"-7px\", \"margin-top\":\"28px\"} : {\"margin-left\":\"-7px\", \"margin-top\":\"0px\"} }\n                                    chartType=\"LineChart\"\n                                    loader={<div style={{ \"width\": viewWidth, \"height\": \"270px\", \"text-align\": \"center\", \"margin-top\": \"100px\" }}>< img src={loading} /></div>}\n                                    data={chartData}\n                                    options={{\n                                        backgroundColor: \"#fff\",\n                                        legend: \"none\",\n                                        // animation : { duration:400, easing:'out'},\n                                        // Gives each series an axis that matches the vAxes number below.\n                                        series: {\n                                            0: {targetAxisIndex: 0},\n                                            1: {targetAxisIndex: 1}\n                                        },\n                                        hAxis: {\n                                            textStyle: {\n                                                color: '#9d9fa4',\n                                                fontSize: 11,\n                                            },\n                                            slantedText: true,\n                                            baselineColor: '#efefef',\n                                            gridlineColor: '#efefef',\n                                        },\n                                        vAxis: {\n                                            minValue:   props.defiName == \"JulSwap\" || \n                                                        props.defiName == \"BiFi\" || \n                                                        props.defiName == \"ForTube\" || \n                                                        props.defiName == \"Bakery Swap\" || \n                                                        props.defiName == \"Nerve Finance\" || \n                                                        props.defiName == \"Alpha Homora\" || \n                                                        props.defiName == \"Smoothy\" || \n                                                        props.defiName == \"Elephant Money\" ||\n                                                        props.defiName == \"Demex\" ||\n                                                        props.defiName == \"Kebab Finance\" ||\n                                                        props.defiName == \"Biswap\" ||\n                                                        props.defiName == \"TEN\" ||\n                                                        props.defiName == \"dForce\" ||\n                                                        props.defiName == \"ARIES FINANCIAL\" ||\n                                                        props.defiName == \"EmiSwap\" ||\n                                                        props.defiName == \"ApeSwap\" ? \n                                                        0.0001 : minTvl,\n                                            textStyle: {\n                                                color: '#9d9fa4',\n                                            },\n                                            baselineColor: '#efefef',\n                                            gridlineColor: '#efefef',\n                                        },\n                                        colors: [\"#FDCE32\", \"#34ab62\"],\n                                        chartArea: { width: chartWidth, height: '70%' },\n                                        focusTarget: 'category',\n                                        crosshair: {\n                                            orientation: 'vertical', \n                                            trigger: 'focus',\n                                            color: '#fff',\n                                            opacity: 0.1,\n                                        },\n                                        }}\n                                    rootProps={{ 'data-testid': '2' }}\n                                    />\n                                </div>    \n                            </li>\n                            <li>\n                                {/* <button className=\"periodBtnSelected\" onClick={() => setChartPeriod(\"7\")}>7d</button>\n                                <button className=\"periodBtn\" onClick={() => setChartPeriod(\"30\")}>30d</button> */}\n                                <div className=\"periodBtns\">\n                                    <button style={chartPeriod == 7 ? undefined : { display: \"none\" }} className=\"periodBtnSelected\">7d</button>\n                                    <button style={chartPeriod == 7 ? { display: \"none\" } : undefined } className=\"periodBtn\" onClick={() => setChartPeriod(\"7\")}>7d</button>\n\n                                    <button style={chartPeriod == 30 ? undefined : { display: \"none\" }} className=\"periodBtnSelected\">1M</button>\n                                    <button style={chartPeriod == 30 ? { display: \"none\" } : undefined } className=\"periodBtn\" onClick={() => setChartPeriod(\"30\")}>1M</button>\n\n                                    <button style={chartPeriod == 90 ? undefined : { display: \"none\" }} className=\"periodBtnSelected\">3M</button>\n                                    <button style={chartPeriod == 90 ? { display: \"none\" } : undefined } className=\"periodBtn\" onClick={() => setChartPeriod(\"90\")}>3M</button>\n\n                                    <button style={chartPeriod == 180 ? undefined : { display: \"none\" }} className=\"periodBtnSelected\">6M</button>\n                                    <button style={chartPeriod == 180 ? { display: \"none\" } : undefined } className=\"periodBtn\" onClick={() => setChartPeriod(\"180\")}>6M</button>\n                                </div>\n                            </li>\n                        </ul>\n                    </div>\n                </li>\n                <li className=\"buttonsNextToChart\">\n                    {/* Home */}\n                    <div className=\"tvlLink0\" style={props.defiName == \"DeFi\" ? undefined : { display: \"none\" } }>\n                        <TvlLink icon={bscLogo} title=\"Binance Smart Chain\" subTitle=\"EVM compatible PoS\" goPage=\"https://www.binance.org/en/smartChain\" />\n                        <TvlLink icon={bscScanLogo} title=\"BscScan\" subTitle=\"BSC Explorer\" goPage=\"https://bscscan.com/\" />\n                        <TvlLink icon={exchangeLogo} title=\"Exchange\" subTitle=\"Crypto asset exchange\" goPage=\"https://www.binance.com/en?ref=39076268\" />\n                        <TvlLink icon={cosmostationLogo} title=\"Polybees Defi\" subTitle=\"Access DeFi\" goPage=\"https://polybeespresale.netlify.app/\" />\n                    </div>\n                    <div className=\"tvlLink\" style={props.defiName == \"DeFi\" ? { display: \"none\" } : undefined }>\n                        {projectBtnLink}\n                    </div>\n                </li>\n            </ul>\n        </div>\n    );\n})\n\nexport default TotalValue;"]},"metadata":{},"sourceType":"module"}