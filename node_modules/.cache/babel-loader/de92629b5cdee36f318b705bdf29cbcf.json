{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\defistation-web-master\\\\defistation-web-master\\\\src\\\\components\\\\theDefiList\\\\TheDefiList.js\";\nimport React, { Component, Suspense, useState, useEffect } from \"react\";\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { observer, inject } from 'mobx-react';\nimport _ from \"lodash\";\nimport useStores from '../../useStores';\nimport { textEllipsis } from '../../util/Util';\nimport { getSponsors } from '../../sponsor/Sponsor';\nimport '../../App.css';\nimport TopBar from '../topBar/TopBar';\nimport Footer from '../footer/Footer';\nimport projectList from '../../projectList.json'; // old\n\nimport defistationApplicationList from \"../../defistationApplicationList.json\";\nimport yellowArrow from \"../../assets/images/arrowic@2x.png\"; // 프로젝트 아이콘\n\nimport defaultIcon from \"../../assets/images/defiLogo/project-none@2x.png\";\nimport alphafinance from \"../../assets/images/defiLogo/alphafinance@2x.png\";\nimport bakeryswap from \"../../assets/images/defiLogo/bakeryswap@2x.png\";\nimport beefyfinance from \"../../assets/images/defiLogo/beefyfinance@2x.png\";\nimport bscswap from \"../../assets/images/defiLogo/bscswap@2x.png\";\nimport burgerswap from \"../../assets/images/defiLogo/burgerswap@2x.png\";\nimport creamfinance from \"../../assets/images/defiLogo/creamfinance@2x.png\";\nimport fortube from \"../../assets/images/defiLogo/fortube@2x.png\";\nimport fryworld from \"../../assets/images/defiLogo/fryworld@2x.png\";\nimport pancake from \"../../assets/images/defiLogo/pancakeswap@2x.png\";\nimport peachswap from \"../../assets/images/defiLogo/peachswap@2x.png\";\nimport spartanprotocol from \"../../assets/images/defiLogo/spartanprotocol@2x.png\";\nimport stakecow from \"../../assets/images/defiLogo/stakecow@2x.png\";\nimport streamity from \"../../assets/images/defiLogo/streamity@2x.png\";\nimport stormswap from \"../../assets/images/defiLogo/stormswap@2x.png\";\nimport narwhalswap from \"../../assets/images/defiLogo/narwhalswap@2x.png\";\nimport bnexchange from \"../../assets/images/defiLogo/bnexchange@2x.png\";\nimport softdrinkswap from \"../../assets/images/defiLogo/softdrinkswap@2x.png\";\nimport nyanswap from \"../../assets/images/defiLogo/nyanswap@2x.png\";\nimport sevenupfinance from \"../../assets/images/defiLogo/7upfinance@2x.png\";\nimport bfisfinance from \"../../assets/images/defiLogo/bfisfinance@2x.png\";\nimport bstablefinance from \"../../assets/images/defiLogo/bstablefinance@2x.png\";\nimport dego from \"../../assets/images/defiLogo/dego@2x.png\";\nimport equatorfinance from \"../../assets/images/defiLogo/equatorfinance@2x.png\";\nimport stablexswap from \"../../assets/images/defiLogo/stablexswap@2x.png\";\nimport qian from \"../../assets/images/defiLogo/qian@2x.png\";\nimport pancakebunny from \"../../assets/images/defiLogo/pancakebunny@2x.png\";\nimport julswap from \"../../assets/images/defiLogo/julswap@2x.png\";\nimport justliquidity from \"../../assets/images/defiLogo/justliquidity@2x.png\";\nimport anyswap from \"../../assets/images/defiLogo/anyswap@2x.png\";\nimport cokefinance from \"../../assets/images/defiLogo/cokefinance@2x.png\";\nimport renvm from \"../../assets/images/defiLogo/renvm@2x.png\";\nimport unifiprotocol from \"../../assets/images/defiLogo/unifiprotocol@2x.png\";\nimport venus from \"../../assets/images/defiLogo/venus@2x.png\";\nimport thugs from \"../../assets/images/defiLogo/thugs@2x.png\";\nimport cberry from \"../../assets/images/defiLogo/cberry@2x.png\";\nimport jetfuel from \"../../assets/images/defiLogo/jetfuel@2x.png\";\nimport acryptos from \"../../assets/images/defiLogo/acryptos@2x.png\";\nimport autofarm from \"../../assets/images/defiLogo/autofarm@2x.png\";\nimport basddollar from \"../../assets/images/defiLogo/basddollar@2x.png\";\nimport bdollar from \"../../assets/images/defiLogo/bdollar@2x.png\";\nimport bscfarm from \"../../assets/images/defiLogo/bscfarm@2x.png\";\nimport bifi from \"../../assets/images/defiLogo/bififinance@2x.png\";\nimport blackholeswap from \"../../assets/images/defiLogo/blackholeswap@2x.png\";\nimport multiplier from \"../../assets/images/defiLogo/multiplier@2x.png\";\nimport pikafinance from \"../../assets/images/defiLogo/pikafinance@2x.png\";\nimport bscrunner from \"../../assets/images/defiLogo/bscrunner@2x.png\";\nimport ellipsisfinance from \"../../assets/images/defiLogo/ellipsisfinance@2x.png\";\nimport demex from \"../../assets/images/defiLogo/demex@2x.png\";\nimport dodo from \"../../assets/images/defiLogo/dodo@2x.png\";\nimport helmet from \"../../assets/images/defiLogo/helmet@2x.png\";\nimport ariesfinancial from \"../../assets/images/defiLogo/ariesfinancial@2x.png\";\nimport alphahomora from \"../../assets/images/defiLogo/alphahomora@2x.png\";\nimport cobaltfinance from \"../../assets/images/defiLogo/cobaltfinance@2x.png\";\nimport swampfinance from \"../../assets/images/defiLogo/swampfinance@2x.png\";\nimport nominex from \"../../assets/images/defiLogo/Nominex@2x.png\";\nimport waultfinance from \"../../assets/images/defiLogo/waultfinance@2x.png\";\nimport wepiggy from \"../../assets/images/defiLogo/wepiggy@2x.png\";\nimport rabbitfinance from \"../../assets/images/defiLogo/rabbitfinance@2x.png\";\nimport biswap from \"../../assets/images/defiLogo/biswap@2x.png\";\nimport insuraceprotocol from \"../../assets/images/defiLogo/insuraceprotocol@2x.png\";\nimport ten from \"../../assets/images/defiLogo/ten@2x.png\";\nimport mdex from \"../../assets/images/defiLogo/mdex@2x.png\";\nimport pumpy from \"../../assets/images/defiLogo/pumpy@2x.png\";\nimport bsclaunch from \"../../assets/images/defiLogo/bsclaunch@2x.png\";\nimport dforce from \"../../assets/images/defiLogo/dforce@2x.png\";\nimport kebab from \"../../assets/images/defiLogo/kebab@2x.png\";\nconst TheDefiList = observer(() => {\n  const {\n    global\n  } = useStores();\n  const location = useLocation();\n  const history = useHistory();\n  const [responseError, setResponseError] = useState();\n  const [response, setResponse] = useState({});\n  const [urlPathName, setUrlPathName] = useState();\n  const [defiName, setDefiName] = useState(\"\");\n  const [defiListCode, setDefiListCode] = useState();\n  const [defiListCodeForListing, setDefiListCodeForListing] = useState();\n  const [defiListCodeForSponsored, setDefiListCodeForSponsored] = useState();\n\n  function movePage(path) {\n    history.push(path);\n  }\n\n  const [urlFlag1, setUrlFlag1] = useState(false);\n\n  async function getDefiList() {\n    if (urlFlag1) return;\n    setUrlFlag1(true);\n    console.count(\"[0716] getDefiListCall\"); // if (global.chartDataDetails == null) return;\n    // console.log(\"global.chartDataDetails.pancake[1603274430]: \", global.chartDataDetails.pancake[1603274430]);\n\n    const res = await fetch(global.defistationApiUrl + \"/defiTvlList\", {\n      method: 'GET',\n      headers: {\n        Authorization: global.auth\n      }\n    });\n    res.json().then(res => {\n      // console.log(\"res: \", res);\n      // res[i].name\n      let listingProjectIndexArr = []; // tvl 순서대로 카드 정렬\n\n      for (var i = 0; i < res.length; i++) {\n        // res[i].name 으로 defistationApplicationList 의 index 순번 찾기\n        let defiApplicationIndex = _.findIndex(defistationApplicationList, function (project) {\n          let projectName = res[i].name;\n          if (projectName == \"pancake\") projectName = \"PancakeSwap\";\n          return project[\"Official Project Name\"] == projectName;\n        });\n\n        listingProjectIndexArr.push(defiApplicationIndex);\n      }\n\n      console.log(\"listingProjectIndexArr: \", listingProjectIndexArr);\n      let codeArr = [];\n      let codeArrForListing = [];\n      codeArrForListing.length = res.length; // lockedUsd\n\n      let codeArrForSponsored = [];\n      let defiIconArr = [];\n\n      for (var i = 0; i < defistationApplicationList.length; i++) {\n        let defiInfoName = defistationApplicationList[i][\"Official Project Name\"].toLowerCase(); // 예외처리\n\n        if (defiInfoName == \"pancakeswap\") {\n          defiInfoName = \"pancake\";\n        } // 이름에 공백 제거\n\n\n        if (defiInfoName.indexOf(\" \") > 0) {\n          defiInfoName = defiInfoName.replace(\" \", \"\");\n        } // . 제거\n\n\n        if (defiInfoName.indexOf(\".\") > 0) {\n          defiInfoName = defiInfoName.replace(\".\", \"\");\n        } // defistation 에 리스팅됐는가? \n\n\n        let listFlag = false; // 리스팅 된거 체크\n        // 아이콘 지금까지 저장한거 체크. 이후로는 defistationApplicationList.json 에 있는 코인 이미지 url로 사용\n        // console.log(\"Official Project Name: \", defistationApplicationList[i][\"Official Project Name\"]);\n\n        switch (defistationApplicationList[i][\"Official Project Name\"]) {\n          case \"pancake\":\n          case \"PancakeSwap\":\n            listFlag = true;\n            defiIconArr.push(pancake);\n            break;\n\n          case \"Peach Swap\":\n            defiIconArr.push(peachswap);\n            break;\n\n          case \"Streamity\":\n            defiIconArr.push(streamity);\n            break;\n\n          case \"bscSwap\":\n          case \"BSC Swap\":\n            listFlag = true;\n            defiIconArr.push(bscswap);\n            break;\n\n          case \"Spartan Protocol\":\n            listFlag = true;\n            defiIconArr.push(spartanprotocol);\n            break;\n\n          case \"Burger Swap\":\n            listFlag = true;\n            defiIconArr.push(burgerswap);\n            break;\n\n          case \"Stakecow\":\n          case \"Milk Protocol\":\n            listFlag = true;\n            defiIconArr.push(stakecow);\n            break;\n\n          case \"Alpha Finance\":\n            defiIconArr.push(alphafinance);\n            break;\n\n          case \"Cream Finance\":\n            listFlag = true;\n            defiIconArr.push(creamfinance);\n            break;\n\n          case \"Bakery Swap\":\n            listFlag = true;\n            defiIconArr.push(bakeryswap);\n            break;\n\n          case \"ForTube\":\n            listFlag = true;\n            defiIconArr.push(fortube);\n            break;\n\n          case \"FryWorld\":\n            listFlag = true;\n            defiIconArr.push(fryworld);\n            break;\n\n          case \"beefy.finance\":\n            listFlag = true;\n            defiIconArr.push(beefyfinance);\n            break;\n\n          case \"Narwhalswap\":\n          case \"NarwhalSwap\":\n            listFlag = true;\n            defiIconArr.push(narwhalswap);\n            break;\n\n          case \"STORMSWAP\":\n          case \"Storm Swap\":\n            listFlag = true;\n            defiIconArr.push(stormswap);\n            break;\n\n          case \"BnEX\":\n            listFlag = true;\n            defiIconArr.push(bnexchange);\n            break;\n\n          case \"7up.finance\":\n          case \"7UP Finance\":\n            defiIconArr.push(sevenupfinance);\n            break;\n\n          case \"BFis.finance\":\n          case \"BFis.Finance\":\n            defiIconArr.push(bfisfinance);\n            break;\n\n          case \"bStable.finance\":\n          case \"bStable\":\n            defiIconArr.push(bstablefinance);\n            break;\n\n          case \"Dego\":\n          case \"Dego.finance\":\n            defiIconArr.push(dego);\n            break;\n\n          case \"Equator.finance\":\n          case \"Equator.Finance\":\n            defiIconArr.push(equatorfinance);\n            break;\n\n          case \"StableXSwap\":\n            defiIconArr.push(stablexswap);\n            break;\n\n          case \"QIAN\":\n            listFlag = true;\n            defiIconArr.push(qian);\n            break;\n\n          case \"PancakeBunny\":\n            listFlag = true;\n            defiIconArr.push(pancakebunny);\n            break;\n\n          case \"JulSwap\":\n          case \"Julswap\":\n            listFlag = true;\n            defiIconArr.push(julswap);\n            break;\n\n          case \"JustLiquidity\":\n            defiIconArr.push(justliquidity);\n            break;\n\n          case \"AnySwap\":\n            listFlag = true;\n            defiIconArr.push(anyswap);\n            break;\n\n          case \"CokeFinance\":\n            listFlag = true;\n            defiIconArr.push(cokefinance);\n            break;\n\n          case \"renVM\":\n            defiIconArr.push(renvm);\n            break;\n\n          case \"UniFi\":\n            defiIconArr.push(unifiprotocol);\n            break;\n\n          case \"Venus\":\n            listFlag = true;\n            defiIconArr.push(venus);\n            break;\n\n          case \"Thugs\":\n            listFlag = true;\n            defiIconArr.push(thugs);\n            break;\n\n          case \"CBerry\":\n            listFlag = true;\n            defiIconArr.push(cberry);\n            break;\n\n          case \"Jetfuel.Finance\":\n            defiIconArr.push(jetfuel);\n            break;\n\n          case \"ACryptoS\":\n            listFlag = true;\n            defiIconArr.push(acryptos);\n            break;\n\n          case \"SoftDrinkSwap\":\n            defiIconArr.push(softdrinkswap);\n            break;\n\n          case \"Nyanswop\":\n            defiIconArr.push(nyanswap);\n            break;\n\n          case \"BSC Farm\":\n            defiIconArr.push(bscfarm);\n            break;\n\n          case \"bDollar Protocol\":\n            listFlag = true;\n            defiIconArr.push(bdollar);\n            break;\n\n          case \"Autofarm\":\n            listFlag = true;\n            defiIconArr.push(autofarm);\n            break;\n\n          case \"Binance Agile Set Dollar\":\n            defiIconArr.push(basddollar);\n            break;\n\n          case \"BiFi\":\n            listFlag = true;\n            defiIconArr.push(bifi);\n            break;\n\n          case \"Multi-Chain Lend (MCL)\":\n            listFlag = true;\n            defiIconArr.push(multiplier);\n            break;\n\n          case \"BlackHoleSwap\":\n            listFlag = true;\n            defiIconArr.push(blackholeswap);\n            break;\n\n          case \"Pika Finance\":\n            listFlag = true;\n            defiIconArr.push(pikafinance);\n            break;\n\n          case \"Bscrunner\":\n            listFlag = true;\n            defiIconArr.push(bscrunner);\n            break;\n\n          case \"Ellipsis Finance\":\n            listFlag = true;\n            defiIconArr.push(ellipsisfinance);\n            break;\n\n          case \"DODO\":\n            listFlag = true;\n            defiIconArr.push(dodo);\n            break;\n\n          case \"Demex\":\n            listFlag = true;\n            defiIconArr.push(demex);\n            break;\n\n          case \"Helmet\":\n            listFlag = true;\n            defiIconArr.push(helmet);\n            break;\n\n          case \"ARIES FINANCIAL\":\n            listFlag = true;\n            defiIconArr.push(ariesfinancial);\n            break;\n\n          case \"Alpha Homora\":\n            listFlag = true;\n            defiIconArr.push(alphahomora);\n            break;\n\n          case \"Cobalt.finance\":\n            listFlag = true;\n            defiIconArr.push(cobaltfinance);\n            break;\n\n          case \"SwampFinance\":\n            listFlag = true;\n            defiIconArr.push(swampfinance);\n            break;\n\n          case \"Nominex\":\n            listFlag = true;\n            defiIconArr.push(nominex);\n            break;\n\n          case \"Wault.Finance\":\n            listFlag = true;\n            defiIconArr.push(waultfinance);\n            break;\n\n          case \"WePiggy\":\n            listFlag = true;\n            defiIconArr.push(wepiggy);\n            break;\n\n          case \"Rabbit Finance\":\n            listFlag = true;\n            defiIconArr.push(rabbitfinance);\n            break;\n\n          case \"Biswap\":\n            listFlag = true;\n            defiIconArr.push(biswap);\n            break;\n\n          case \"InsurAce Protocol\":\n            listFlag = true;\n            defiIconArr.push(insuraceprotocol);\n            break;\n\n          case \"TEN\":\n            listFlag = true;\n            defiIconArr.push(ten);\n            break;\n\n          case \"MDEX\":\n            listFlag = true;\n            defiIconArr.push(mdex);\n            break;\n\n          case \"Pumpy\":\n            listFlag = true;\n            defiIconArr.push(pumpy);\n            break;\n\n          case \"dForce\":\n            listFlag = true;\n            defiIconArr.push(dforce);\n            break;\n\n          case \"Kebab Finance\":\n            listFlag = true;\n            defiIconArr.push(kebab);\n            break;\n\n          default:\n            // defistationApplicationList.json 에 코인 심볼 아이콘 url이 있는가?\n            if (defistationApplicationList[i][\"Project Logo URL (68px*68px png ONLY. Given link should directly DISPLAY Logo image without any BACKGROUND. Google drive link is NOT accepted.)\"] != \"\") {\n              if (defistationApplicationList[i][\"Project Logo URL (68px*68px png ONLY. Given link should directly DISPLAY Logo image without any BACKGROUND. Google drive link is NOT accepted.)\"].indexOf(\"https://drive.google.com\") > -1) {\n                defiIconArr.push(defaultIcon);\n              } else {\n                defiIconArr.push(defistationApplicationList[i][\"Project Logo URL (68px*68px png ONLY. Given link should directly DISPLAY Logo image without any BACKGROUND. Google drive link is NOT accepted.)\"]);\n              }\n            } else {\n              defiIconArr.push(defaultIcon);\n            }\n\n            break;\n        }\n\n        let sponsoredFlag = false;\n\n        if (getSponsors().indexOf(defistationApplicationList[i][\"Official Project Name\"]) != -1) {\n          sponsoredFlag = true;\n        } // listingProjectIndexArr 에 들어있는 순번대로 배치\n        // 3가지 타입: Sponsored + 리스팅 + 대기\n\n\n        if (listingProjectIndexArr.indexOf(i) != -1) {\n          // 리스팅 되어 있음\n          // 이 중에서 Sponsored 는 codeArrForSponsored 배열에 넣고\n          // 일반 리스팅 프로젝트는 tvl 순서대로 보여주고\n          // 가장 하단에 codeArrForListing 배열에 넣어 표시한다\n          let tempCode = /*#__PURE__*/React.createElement(\"li\", {\n            onClick: () => history.push(\"/\" + defiInfoName),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 40\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            src: defiIconArr[i],\n            width: \"30px\",\n            onError: e => {\n              e.target.onerror = null;\n              e.target.src = defaultIcon;\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 29\n            }\n          }), /*#__PURE__*/React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 31\n            }\n          }), /*#__PURE__*/React.createElement(\"span\", {\n            className: \"theDefiListCardTitle\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 29\n            }\n          }, defistationApplicationList[i][\"Official Project Name\"]), /*#__PURE__*/React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 131\n            }\n          }), /*#__PURE__*/React.createElement(\"span\", {\n            className: \"theDefiListCardText\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 29\n            }\n          }, textEllipsis(defistationApplicationList[i][\"Detailed Project Description\"])));\n\n          if (sponsoredFlag) {\n            // 예외처리(url 링크)\n            if (defistationApplicationList[i][\"Official Project Name\"] == \"BSClaunch\") {\n              tempCode = /*#__PURE__*/React.createElement(\"li\", {\n                onClick: () => window.open(\"https://bsclaunch.org/\", \"_blank\"),\n                className: \"projectsCardSponsored\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 477,\n                  columnNumber: 44\n                }\n              }, /*#__PURE__*/React.createElement(\"div\", {\n                className: \"sponsored rightTopSponsored\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 478,\n                  columnNumber: 37\n                }\n              }, \"Sponsored\"), /*#__PURE__*/React.createElement(\"img\", {\n                src: bsclaunch,\n                width: \"30px\",\n                onError: e => {\n                  e.target.onerror = null;\n                  e.target.src = defaultIcon;\n                },\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 479,\n                  columnNumber: 37\n                }\n              }), /*#__PURE__*/React.createElement(\"br\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 483,\n                  columnNumber: 39\n                }\n              }), /*#__PURE__*/React.createElement(\"span\", {\n                className: \"theDefiListCardTitle\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 484,\n                  columnNumber: 37\n                }\n              }, defistationApplicationList[i][\"Official Project Name\"]), /*#__PURE__*/React.createElement(\"br\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 484,\n                  columnNumber: 139\n                }\n              }), /*#__PURE__*/React.createElement(\"span\", {\n                className: \"theDefiListCardText\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 485,\n                  columnNumber: 37\n                }\n              }, textEllipsis(defistationApplicationList[i][\"Detailed Project Description\"])));\n            } else {\n              // 일반 리스팅\n              tempCode = /*#__PURE__*/React.createElement(\"li\", {\n                onClick: () => history.push(\"/\" + defiInfoName),\n                className: \"projectsCardSponsored\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 489,\n                  columnNumber: 44\n                }\n              }, /*#__PURE__*/React.createElement(\"div\", {\n                className: \"sponsored rightTopSponsored\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 490,\n                  columnNumber: 37\n                }\n              }, \"Sponsored\"), /*#__PURE__*/React.createElement(\"img\", {\n                src: defiIconArr[i],\n                width: \"30px\",\n                onError: e => {\n                  e.target.onerror = null;\n                  e.target.src = defaultIcon;\n                },\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 491,\n                  columnNumber: 37\n                }\n              }), /*#__PURE__*/React.createElement(\"br\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 495,\n                  columnNumber: 39\n                }\n              }), /*#__PURE__*/React.createElement(\"span\", {\n                className: \"theDefiListCardTitle\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 496,\n                  columnNumber: 37\n                }\n              }, defistationApplicationList[i][\"Official Project Name\"]), /*#__PURE__*/React.createElement(\"br\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 496,\n                  columnNumber: 139\n                }\n              }), /*#__PURE__*/React.createElement(\"span\", {\n                className: \"theDefiListCardText\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 497,\n                  columnNumber: 37\n                }\n              }, textEllipsis(defistationApplicationList[i][\"Detailed Project Description\"])));\n            }\n\n            codeArrForSponsored.push(tempCode);\n          } else {\n            // listingProjectIndexArr 배열의 순번대로 넣어야함\n            let orderByTvl = listingProjectIndexArr.indexOf(i);\n            codeArrForListing[orderByTvl] = tempCode;\n          }\n        } else {\n          let tempUrl = defistationApplicationList[i][\"Project Official Website (URL)\"];\n          let tempCode = /*#__PURE__*/React.createElement(\"li\", {\n            onClick: () => window.open(tempUrl, \"_blank\"),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 40\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            src: defiIconArr[i],\n            width: \"30px\",\n            style: {\n              \"height\": \"30px\",\n              \"min-height\": \"30px\"\n            },\n            onError: e => {\n              e.target.onerror = null;\n              e.target.src = defaultIcon;\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 29\n            }\n          }), /*#__PURE__*/React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 31\n            }\n          }), /*#__PURE__*/React.createElement(\"span\", {\n            className: \"theDefiListCardTitle\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 29\n            }\n          }, defistationApplicationList[i][\"Official Project Name\"]), /*#__PURE__*/React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 131\n            }\n          }), /*#__PURE__*/React.createElement(\"span\", {\n            className: \"theDefiListCardText\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 29\n            }\n          }, textEllipsis(defistationApplicationList[i][\"Detailed Project Description\"])));\n          codeArr.push(tempCode);\n        }\n      }\n\n      setDefiListCode(codeArr);\n      setDefiListCodeForSponsored(codeArrForSponsored);\n      setDefiListCodeForListing(codeArrForListing);\n    }).catch(err => setResponseError(err));\n  }\n\n  useEffect(() => {\n    getDefiList();\n    return () => {\n      console.log('cleanup');\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TopBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"tvlTitleBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"subPageTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 29\n    }\n  }, \"Projects\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navBox noDrag\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"navHome\",\n    onClick: () => movePage(\"/\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 60\n    }\n  }, \"PolybeesWatcher\"), \" > \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"navDefiName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 144\n    }\n  }, \"Projects\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"applyBtn\",\n    onClick: () => window.open(\"https://forms.polybees.network\", \"_blank\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"applyBtnUl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"applyBtnTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 29\n    }\n  }, \"Apply to be listed\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 80\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"applyBtnText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 29\n    }\n  }, \"Please fill in this application form to be begin your screening process to be listed on PolybeesWatcher and dont forget to prepare your Polybees LP token or Bees Protocol token.\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: yellowArrow,\n    width: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"theDefiListUl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 17\n    }\n  }, defiListCodeForSponsored, defiListCodeForListing, defiListCode), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 17\n    }\n  })));\n});\nexport default TheDefiList;","map":{"version":3,"sources":["C:/Users/user/Desktop/defistation-web-master/defistation-web-master/src/components/theDefiList/TheDefiList.js"],"names":["React","Component","Suspense","useState","useEffect","useHistory","useLocation","observer","inject","_","useStores","textEllipsis","getSponsors","TopBar","Footer","projectList","defistationApplicationList","yellowArrow","defaultIcon","alphafinance","bakeryswap","beefyfinance","bscswap","burgerswap","creamfinance","fortube","fryworld","pancake","peachswap","spartanprotocol","stakecow","streamity","stormswap","narwhalswap","bnexchange","softdrinkswap","nyanswap","sevenupfinance","bfisfinance","bstablefinance","dego","equatorfinance","stablexswap","qian","pancakebunny","julswap","justliquidity","anyswap","cokefinance","renvm","unifiprotocol","venus","thugs","cberry","jetfuel","acryptos","autofarm","basddollar","bdollar","bscfarm","bifi","blackholeswap","multiplier","pikafinance","bscrunner","ellipsisfinance","demex","dodo","helmet","ariesfinancial","alphahomora","cobaltfinance","swampfinance","nominex","waultfinance","wepiggy","rabbitfinance","biswap","insuraceprotocol","ten","mdex","pumpy","bsclaunch","dforce","kebab","TheDefiList","global","location","history","responseError","setResponseError","response","setResponse","urlPathName","setUrlPathName","defiName","setDefiName","defiListCode","setDefiListCode","defiListCodeForListing","setDefiListCodeForListing","defiListCodeForSponsored","setDefiListCodeForSponsored","movePage","path","push","urlFlag1","setUrlFlag1","getDefiList","console","count","res","fetch","defistationApiUrl","method","headers","Authorization","auth","json","then","listingProjectIndexArr","i","length","defiApplicationIndex","findIndex","project","projectName","name","log","codeArr","codeArrForListing","codeArrForSponsored","defiIconArr","defiInfoName","toLowerCase","indexOf","replace","listFlag","sponsoredFlag","tempCode","e","target","onerror","src","window","open","orderByTvl","tempUrl","catch","err"],"mappings":"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","sourcesContent":["import React, { Component, Suspense, useState, useEffect } from \"react\";\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { observer, inject } from 'mobx-react';\nimport _ from \"lodash\";\n\nimport useStores from '../../useStores';\n\nimport { textEllipsis } from '../../util/Util';\nimport { getSponsors } from '../../sponsor/Sponsor';\n\nimport '../../App.css';\n\nimport TopBar from '../topBar/TopBar';\nimport Footer from '../footer/Footer';\n\nimport projectList from '../../projectList.json';   // old\nimport defistationApplicationList from \"../../defistationApplicationList.json\";\n\nimport yellowArrow from \"../../assets/images/arrowic@2x.png\";\n// 프로젝트 아이콘\nimport defaultIcon from \"../../assets/images/defiLogo/project-none@2x.png\";\nimport alphafinance from \"../../assets/images/defiLogo/alphafinance@2x.png\";\nimport bakeryswap from \"../../assets/images/defiLogo/bakeryswap@2x.png\";\nimport beefyfinance from \"../../assets/images/defiLogo/beefyfinance@2x.png\";\nimport bscswap from \"../../assets/images/defiLogo/bscswap@2x.png\";\nimport burgerswap from \"../../assets/images/defiLogo/burgerswap@2x.png\";\nimport creamfinance from \"../../assets/images/defiLogo/creamfinance@2x.png\";\nimport fortube from \"../../assets/images/defiLogo/fortube@2x.png\";\nimport fryworld from \"../../assets/images/defiLogo/fryworld@2x.png\";\nimport pancake from \"../../assets/images/defiLogo/pancakeswap@2x.png\";\nimport peachswap from \"../../assets/images/defiLogo/peachswap@2x.png\";\nimport spartanprotocol from \"../../assets/images/defiLogo/spartanprotocol@2x.png\";\nimport stakecow from \"../../assets/images/defiLogo/stakecow@2x.png\";\nimport streamity from \"../../assets/images/defiLogo/streamity@2x.png\";\nimport stormswap from \"../../assets/images/defiLogo/stormswap@2x.png\";\nimport narwhalswap from \"../../assets/images/defiLogo/narwhalswap@2x.png\";\nimport bnexchange from \"../../assets/images/defiLogo/bnexchange@2x.png\";\nimport softdrinkswap from \"../../assets/images/defiLogo/softdrinkswap@2x.png\";\nimport nyanswap from \"../../assets/images/defiLogo/nyanswap@2x.png\";\nimport sevenupfinance from \"../../assets/images/defiLogo/7upfinance@2x.png\";\nimport bfisfinance from \"../../assets/images/defiLogo/bfisfinance@2x.png\";\nimport bstablefinance from \"../../assets/images/defiLogo/bstablefinance@2x.png\";\nimport dego from \"../../assets/images/defiLogo/dego@2x.png\";\nimport equatorfinance from \"../../assets/images/defiLogo/equatorfinance@2x.png\";\nimport stablexswap from \"../../assets/images/defiLogo/stablexswap@2x.png\";\nimport qian from \"../../assets/images/defiLogo/qian@2x.png\";\nimport pancakebunny from \"../../assets/images/defiLogo/pancakebunny@2x.png\";\nimport julswap from \"../../assets/images/defiLogo/julswap@2x.png\";\nimport justliquidity from \"../../assets/images/defiLogo/justliquidity@2x.png\";\nimport anyswap from \"../../assets/images/defiLogo/anyswap@2x.png\";\nimport cokefinance from \"../../assets/images/defiLogo/cokefinance@2x.png\";\nimport renvm from \"../../assets/images/defiLogo/renvm@2x.png\";\nimport unifiprotocol from \"../../assets/images/defiLogo/unifiprotocol@2x.png\";\nimport venus from \"../../assets/images/defiLogo/venus@2x.png\";\nimport thugs from \"../../assets/images/defiLogo/thugs@2x.png\";\nimport cberry from \"../../assets/images/defiLogo/cberry@2x.png\";\nimport jetfuel from \"../../assets/images/defiLogo/jetfuel@2x.png\";\nimport acryptos from \"../../assets/images/defiLogo/acryptos@2x.png\";\nimport autofarm from \"../../assets/images/defiLogo/autofarm@2x.png\";\nimport basddollar from \"../../assets/images/defiLogo/basddollar@2x.png\";\nimport bdollar from \"../../assets/images/defiLogo/bdollar@2x.png\";\nimport bscfarm from \"../../assets/images/defiLogo/bscfarm@2x.png\";\nimport bifi from \"../../assets/images/defiLogo/bififinance@2x.png\";\nimport blackholeswap from \"../../assets/images/defiLogo/blackholeswap@2x.png\";\nimport multiplier from \"../../assets/images/defiLogo/multiplier@2x.png\";\nimport pikafinance from \"../../assets/images/defiLogo/pikafinance@2x.png\";\nimport bscrunner from \"../../assets/images/defiLogo/bscrunner@2x.png\";\nimport ellipsisfinance from \"../../assets/images/defiLogo/ellipsisfinance@2x.png\";\nimport demex from \"../../assets/images/defiLogo/demex@2x.png\";\nimport dodo from \"../../assets/images/defiLogo/dodo@2x.png\";\nimport helmet from \"../../assets/images/defiLogo/helmet@2x.png\";\nimport ariesfinancial from \"../../assets/images/defiLogo/ariesfinancial@2x.png\";\nimport alphahomora from \"../../assets/images/defiLogo/alphahomora@2x.png\";\nimport cobaltfinance from \"../../assets/images/defiLogo/cobaltfinance@2x.png\";\nimport swampfinance from \"../../assets/images/defiLogo/swampfinance@2x.png\";\nimport nominex from \"../../assets/images/defiLogo/Nominex@2x.png\";\nimport waultfinance from \"../../assets/images/defiLogo/waultfinance@2x.png\";\nimport wepiggy from \"../../assets/images/defiLogo/wepiggy@2x.png\";\nimport rabbitfinance from \"../../assets/images/defiLogo/rabbitfinance@2x.png\";\nimport biswap from \"../../assets/images/defiLogo/biswap@2x.png\";\nimport insuraceprotocol from \"../../assets/images/defiLogo/insuraceprotocol@2x.png\";\nimport ten from \"../../assets/images/defiLogo/ten@2x.png\";\nimport mdex from \"../../assets/images/defiLogo/mdex@2x.png\";\nimport pumpy from \"../../assets/images/defiLogo/pumpy@2x.png\";\nimport bsclaunch from \"../../assets/images/defiLogo/bsclaunch@2x.png\";\nimport dforce from \"../../assets/images/defiLogo/dforce@2x.png\";\nimport kebab from \"../../assets/images/defiLogo/kebab@2x.png\";\n\nconst TheDefiList = observer(() => {\n    const { global } = useStores();\n\n    const location = useLocation();\n\n    const history = useHistory();\n\n    const [responseError, setResponseError] = useState();\n    const [response, setResponse] = useState({});\n\n    const [urlPathName, setUrlPathName] = useState();\n    const [defiName, setDefiName] = useState(\"\");\n    \n    const [defiListCode, setDefiListCode] = useState();\n    const [defiListCodeForListing, setDefiListCodeForListing] = useState();\n    const [defiListCodeForSponsored, setDefiListCodeForSponsored] = useState();\n\n\n\n    function movePage(path) {\n        history.push(path);\n    }\n\n    const [urlFlag1, setUrlFlag1] = useState(false);\n\n    async function getDefiList() {\n        if (urlFlag1) return;\n        setUrlFlag1(true);\n\n        console.count(\"[0716] getDefiListCall\");\n        // if (global.chartDataDetails == null) return;\n        // console.log(\"global.chartDataDetails.pancake[1603274430]: \", global.chartDataDetails.pancake[1603274430]);\n\n        const res = await fetch(global.defistationApiUrl + \"/defiTvlList\", {\n            method: 'GET',\n            headers: {\n                Authorization: global.auth\n            }\n        });\n        res\n            .json()\n            .then(res => {\n                // console.log(\"res: \", res);\n                // res[i].name\n\n                let listingProjectIndexArr = [];\n\n                // tvl 순서대로 카드 정렬\n                for (var i = 0; i < res.length; i++) {\n                    // res[i].name 으로 defistationApplicationList 의 index 순번 찾기\n                    let defiApplicationIndex = _.findIndex(defistationApplicationList, function(project) {\n                        let projectName = res[i].name;\n                        if (projectName == \"pancake\") projectName = \"PancakeSwap\";\n                        return project[\"Official Project Name\"] == projectName;\n                    });\n                    listingProjectIndexArr.push(defiApplicationIndex);\n                }\n\n                console.log(\"listingProjectIndexArr: \", listingProjectIndexArr);\n\n                let codeArr = [];\n                let codeArrForListing = [];\n                codeArrForListing.length = res.length; // lockedUsd\n                let codeArrForSponsored = [];\n                let defiIconArr = [];\n\n                for (var i = 0; i < defistationApplicationList.length; i++) {\n                    let defiInfoName = (defistationApplicationList[i][\"Official Project Name\"]).toLowerCase();\n        \n                    // 예외처리\n                    if (defiInfoName == \"pancakeswap\") {\n                        defiInfoName = \"pancake\";\n                    }\n        \n                    // 이름에 공백 제거\n                    if (defiInfoName.indexOf(\" \") > 0) {\n                        defiInfoName = defiInfoName.replace(\" \", \"\");\n                    }\n        \n                    // . 제거\n                    if (defiInfoName.indexOf(\".\") > 0) {\n                        defiInfoName = defiInfoName.replace(\".\", \"\");\n                    }\n        \n                    // defistation 에 리스팅됐는가? \n                    let listFlag = false;\n        \n                    // 리스팅 된거 체크\n        \n                    // 아이콘 지금까지 저장한거 체크. 이후로는 defistationApplicationList.json 에 있는 코인 이미지 url로 사용\n                    \n                    // console.log(\"Official Project Name: \", defistationApplicationList[i][\"Official Project Name\"]);\n        \n                    switch (defistationApplicationList[i][\"Official Project Name\"]) {\n                        case \"pancake\":\n                        case \"PancakeSwap\":    \n                            listFlag = true;\n                            defiIconArr.push(pancake);\n                            break;\n                        case \"Peach Swap\":\n                            defiIconArr.push(peachswap);\n                            break;   \n                        case \"Streamity\":\n                            defiIconArr.push(streamity);\n                            break;   \n                        case \"bscSwap\":\n                        case \"BSC Swap\":\n                            listFlag = true;\n                            defiIconArr.push(bscswap);\n                            break;   \n                        case \"Spartan Protocol\":\n                            listFlag = true;\n                            defiIconArr.push(spartanprotocol);\n                            break;   \n                        case \"Burger Swap\":\n                            listFlag = true;\n                            defiIconArr.push(burgerswap);\n                            break;   \n                        case \"Stakecow\":\n                        case \"Milk Protocol\":\n                            listFlag = true;\n                            defiIconArr.push(stakecow);\n                            break;   \n                        case \"Alpha Finance\":\n                            defiIconArr.push(alphafinance);\n                            break;   \n                        case \"Cream Finance\":\n                            listFlag = true;\n                            defiIconArr.push(creamfinance);\n                            break;   \n                        case \"Bakery Swap\":\n                            listFlag = true;\n                            defiIconArr.push(bakeryswap);\n                            break;   \n                        case \"ForTube\":\n                            listFlag = true;\n                            defiIconArr.push(fortube);\n                            break;   \n                        case \"FryWorld\":\n                            listFlag = true;\n                            defiIconArr.push(fryworld);\n                            break;   \n                        case \"beefy.finance\":\n                            listFlag = true;\n                            defiIconArr.push(beefyfinance);\n                            break;\n                        case \"Narwhalswap\":\n                        case \"NarwhalSwap\":\n                            listFlag = true;\n                            defiIconArr.push(narwhalswap);\n                            break;   \n                        case \"STORMSWAP\":\n                        case \"Storm Swap\":  \n                            listFlag = true;  \n                            defiIconArr.push(stormswap);\n                            break;       \n                        case \"BnEX\":\n                            listFlag = true;\n                            defiIconArr.push(bnexchange);\n                            break;\n                        case \"7up.finance\":\n                        case \"7UP Finance\":    \n                            defiIconArr.push(sevenupfinance);\n                            break;\n                        case \"BFis.finance\":\n                        case \"BFis.Finance\":\n                            defiIconArr.push(bfisfinance);\n                            break;\n                        case \"bStable.finance\":\n                        case \"bStable\":\n                            defiIconArr.push(bstablefinance);\n                            break;\n                        case \"Dego\":\n                        case \"Dego.finance\":    \n                            defiIconArr.push(dego);\n                            break;\n                        case \"Equator.finance\":\n                        case \"Equator.Finance\":\n                            defiIconArr.push(equatorfinance);\n                            break;\n                        case \"StableXSwap\":\n                            defiIconArr.push(stablexswap);\n                            break;\n                        case \"QIAN\":\n                            listFlag = true;\n                            defiIconArr.push(qian);\n                            break;    \n                        case \"PancakeBunny\":\n                            listFlag = true;\n                            defiIconArr.push(pancakebunny);\n                            break;\n                        case \"JulSwap\":\n                        case \"Julswap\":   \n                            listFlag = true; \n                            defiIconArr.push(julswap);\n                            break;\n                        case \"JustLiquidity\":\n                            defiIconArr.push(justliquidity);\n                            break;\n                        case \"AnySwap\":\n                            listFlag = true;\n                            defiIconArr.push(anyswap);\n                            break;\n                        case \"CokeFinance\":\n                            listFlag = true;\n                            defiIconArr.push(cokefinance);\n                            break;\n                        case \"renVM\":\n                            defiIconArr.push(renvm);\n                            break;\n                        case \"UniFi\":\n                            defiIconArr.push(unifiprotocol);\n                            break;\n                        case \"Venus\":\n                            listFlag = true;\n                            defiIconArr.push(venus);\n                            break;   \n                        case \"Thugs\":\n                            listFlag = true;\n                            defiIconArr.push(thugs);\n                            break; \n                        case \"CBerry\":\n                            listFlag = true;\n                            defiIconArr.push(cberry);\n                            break; \n                        case \"Jetfuel.Finance\":\n                            defiIconArr.push(jetfuel);\n                            break;  \n                        case \"ACryptoS\":\n                            listFlag = true;\n                            defiIconArr.push(acryptos);\n                            break;   \n                        case \"SoftDrinkSwap\":\n                            defiIconArr.push(softdrinkswap);\n                            break;    \n                        case \"Nyanswop\":\n                            defiIconArr.push(nyanswap);\n                            break;\n                        case \"BSC Farm\":\n                            defiIconArr.push(bscfarm);    \n                            break;   \n                        case \"bDollar Protocol\":\n                            listFlag = true;\n                            defiIconArr.push(bdollar);    \n                            break;   \n                        case \"Autofarm\":\n                            listFlag = true;\n                            defiIconArr.push(autofarm);    \n                            break;   \n                        case \"Binance Agile Set Dollar\":\n                            defiIconArr.push(basddollar);    \n                            break;\n                        case \"BiFi\":\n                            listFlag = true;\n                            defiIconArr.push(bifi);    \n                            break;\n                        case \"Multi-Chain Lend (MCL)\":\n                            listFlag = true;\n                            defiIconArr.push(multiplier);    \n                            break;    \n                        case \"BlackHoleSwap\":\n                            listFlag = true;\n                            defiIconArr.push(blackholeswap);    \n                            break;\n                        case \"Pika Finance\":\n                            listFlag = true;\n                            defiIconArr.push(pikafinance);    \n                            break;  \n                        case \"Bscrunner\":\n                            listFlag = true;\n                            defiIconArr.push(bscrunner);\n                            break;  \n                        case \"Ellipsis Finance\":\n                            listFlag = true;\n                            defiIconArr.push(ellipsisfinance);\n                            break;\n                        case \"DODO\":\n                            listFlag = true;\n                            defiIconArr.push(dodo);\n                            break;\n                        case \"Demex\":\n                            listFlag = true;\n                            defiIconArr.push(demex);\n                            break;\n                        case \"Helmet\":\n                            listFlag = true;\n                            defiIconArr.push(helmet);\n                            break;\n                        case \"ARIES FINANCIAL\":\n                            listFlag = true;\n                            defiIconArr.push(ariesfinancial);\n                            break;\n                        case \"Alpha Homora\":\n                            listFlag = true;\n                            defiIconArr.push(alphahomora);\n                            break;    \n                        case \"Cobalt.finance\":\n                            listFlag = true;\n                            defiIconArr.push(cobaltfinance);\n                            break;\n                        case \"SwampFinance\":\n                            listFlag = true;\n                            defiIconArr.push(swampfinance);\n                            break;\n                        case \"Nominex\":\n                            listFlag = true;\n                            defiIconArr.push(nominex);\n                            break;\n                        case \"Wault.Finance\":\n                            listFlag = true;\n                            defiIconArr.push(waultfinance);\n                            break;\n                        case \"WePiggy\":\n                            listFlag = true;\n                            defiIconArr.push(wepiggy);\n                            break;\n                        case \"Rabbit Finance\":\n                            listFlag = true;\n                            defiIconArr.push(rabbitfinance);\n                            break;\n                        case \"Biswap\":\n                            listFlag = true;\n                            defiIconArr.push(biswap);\n                            break;  \n                        case \"InsurAce Protocol\":\n                            listFlag = true;\n                            defiIconArr.push(insuraceprotocol);\n                            break;\n                        case \"TEN\":\n                            listFlag = true;\n                            defiIconArr.push(ten);\n                            break;  \n                        case \"MDEX\":\n                            listFlag = true;\n                            defiIconArr.push(mdex);\n                            break; \n                        case \"Pumpy\":\n                            listFlag = true;\n                            defiIconArr.push(pumpy);\n                            break;\n                        case \"dForce\":\n                            listFlag = true;\n                            defiIconArr.push(dforce);\n                            break;      \n                        case \"Kebab Finance\":\n                            listFlag = true;\n                            defiIconArr.push(kebab);\n                            break;                    \n                        default:\n                            // defistationApplicationList.json 에 코인 심볼 아이콘 url이 있는가?\n                            if (defistationApplicationList[i][\"Project Logo URL (68px*68px png ONLY. Given link should directly DISPLAY Logo image without any BACKGROUND. Google drive link is NOT accepted.)\"] != \"\") {\n                                if (defistationApplicationList[i][\"Project Logo URL (68px*68px png ONLY. Given link should directly DISPLAY Logo image without any BACKGROUND. Google drive link is NOT accepted.)\"].indexOf(\"https://drive.google.com\") > -1) {\n                                    defiIconArr.push(defaultIcon);\n                                } else {\n                                    defiIconArr.push(defistationApplicationList[i][\"Project Logo URL (68px*68px png ONLY. Given link should directly DISPLAY Logo image without any BACKGROUND. Google drive link is NOT accepted.)\"]);\n                                }\n                            } else {\n                                defiIconArr.push(defaultIcon);\n                            }\n                            break;    \n                    }\n        \n                    let sponsoredFlag = false;\n                    if (getSponsors().indexOf(defistationApplicationList[i][\"Official Project Name\"]) != -1) {\n                        sponsoredFlag = true;\n                    }\n\n                    // listingProjectIndexArr 에 들어있는 순번대로 배치\n\n                    // 3가지 타입: Sponsored + 리스팅 + 대기\n                    if (listingProjectIndexArr.indexOf(i) != -1) {\n                        // 리스팅 되어 있음\n                        // 이 중에서 Sponsored 는 codeArrForSponsored 배열에 넣고\n                        // 일반 리스팅 프로젝트는 tvl 순서대로 보여주고\n                        // 가장 하단에 codeArrForListing 배열에 넣어 표시한다\n                        let tempCode = <li onClick={() => history.push(\"/\" + defiInfoName)}>\n                            <img \n                                src={defiIconArr[i]} \n                                width=\"30px\" \n                                onError={(e)=>{e.target.onerror = null; e.target.src=defaultIcon}}\n                            /><br />\n                            <span className=\"theDefiListCardTitle\">{defistationApplicationList[i][\"Official Project Name\"]}</span><br />\n                            <span className=\"theDefiListCardText\">{textEllipsis(defistationApplicationList[i][\"Detailed Project Description\"])}</span>\n                        </li>;\n\n                        if (sponsoredFlag) {\n                            // 예외처리(url 링크)\n                            if (defistationApplicationList[i][\"Official Project Name\"] == \"BSClaunch\") {\n                                tempCode = <li onClick={() => window.open(\"https://bsclaunch.org/\", \"_blank\")} className=\"projectsCardSponsored\">\n                                    <div className=\"sponsored rightTopSponsored\">Sponsored</div>\n                                    <img \n                                        src={bsclaunch} \n                                        width=\"30px\" \n                                        onError={(e)=>{e.target.onerror = null; e.target.src=defaultIcon}}\n                                    /><br />\n                                    <span className=\"theDefiListCardTitle\">{defistationApplicationList[i][\"Official Project Name\"]}</span><br />\n                                    <span className=\"theDefiListCardText\">{textEllipsis(defistationApplicationList[i][\"Detailed Project Description\"])}</span>\n                                </li>;\n                            } else {\n                                // 일반 리스팅\n                                tempCode = <li onClick={() => history.push(\"/\" + defiInfoName)} className=\"projectsCardSponsored\">\n                                    <div className=\"sponsored rightTopSponsored\">Sponsored</div>\n                                    <img \n                                        src={defiIconArr[i]} \n                                        width=\"30px\" \n                                        onError={(e)=>{e.target.onerror = null; e.target.src=defaultIcon}}\n                                    /><br />\n                                    <span className=\"theDefiListCardTitle\">{defistationApplicationList[i][\"Official Project Name\"]}</span><br />\n                                    <span className=\"theDefiListCardText\">{textEllipsis(defistationApplicationList[i][\"Detailed Project Description\"])}</span>\n                                </li>;\n                            }\n                            \n                            codeArrForSponsored.push(tempCode);\n                        } else {\n                            // listingProjectIndexArr 배열의 순번대로 넣어야함\n                            let orderByTvl = listingProjectIndexArr.indexOf(i);\n                            codeArrForListing[orderByTvl] = tempCode;\n                        }\n                    } else {\n                        let tempUrl = defistationApplicationList[i][\"Project Official Website (URL)\"];\n                        let tempCode = <li onClick={() => window.open(tempUrl, \"_blank\")}>\n                            <img \n                                src={defiIconArr[i]} \n                                width=\"30px\" \n                                style={{\"height\":\"30px\", \"min-height\": \"30px\"}}\n                                onError={(e)=>{e.target.onerror = null; e.target.src=defaultIcon}}\n                            /><br />\n                            <span className=\"theDefiListCardTitle\">{defistationApplicationList[i][\"Official Project Name\"]}</span><br />\n                            <span className=\"theDefiListCardText\">{textEllipsis(defistationApplicationList[i][\"Detailed Project Description\"])}</span>\n                        </li>;\n                        codeArr.push(tempCode);\n                    }\n                }\n\n                setDefiListCode(codeArr);\n                setDefiListCodeForSponsored(codeArrForSponsored);\n                setDefiListCodeForListing(codeArrForListing);\n            })\n            .catch(err => setResponseError(err));\n    }\n\n    useEffect(() => {\n        getDefiList();\n        \n        return () => {\n            console.log('cleanup');\n        };\n    }, [])\n\n    return (\n        <>\n            <div className=\"wrapper\">\n                <TopBar />\n                {/* <div className=\"navBox noDrag\"><span className=\"navHome\" onClick={() => movePage(\"/\")}>PolybeesWatcher</span> &gt; <span className=\"navDefiName\">Projects</span></div> */}\n                <div>\n                    <ul className=\"tvlTitleBox\">\n                        <li>\n                            <span className=\"subPageTitle\">Projects</span>\n                        </li>\n                        <li>\n                            <div className=\"navBox noDrag\"><span className=\"navHome\" onClick={() => movePage(\"/\")}>PolybeesWatcher</span> &gt; <span className=\"navDefiName\">Projects</span></div>\n                        </li>\n                    </ul>\n                </div>\n                \n                \n                <div className=\"applyBtn\" onClick={() => window.open(\"https://forms.polybees.network\", \"_blank\")}>\n                    <ul className=\"applyBtnUl\">\n                        <li>\n                            <p className=\"applyBtnTitle\">Apply to be listed</p><br />\n                            <span className=\"applyBtnText\">Please fill in this application form to be begin your screening process to be listed on PolybeesWatcher and dont forget to prepare your Polybees LP token or Bees Protocol token.</span>\n                        </li>\n                        <li>\n                            <img src={yellowArrow} width=\"40px\" />\n                        </li>\n                    </ul>\n                </div>\n                <ul className=\"theDefiListUl\">\n                    {defiListCodeForSponsored}\n                    {defiListCodeForListing}\n                    {defiListCode}\n                </ul>\n                <Footer />\n            </div>\n        </>\n    );\n})\n\nexport default TheDefiList;\n"]},"metadata":{},"sourceType":"module"}